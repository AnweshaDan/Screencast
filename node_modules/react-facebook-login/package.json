{
  "_from": "react-facebook-login",
  "_id": "react-facebook-login@4.1.1",
  "_inBundle": false,
  "_integrity": "sha512-COnHEHlYGTKipz4963safFAK9PaNTcCiXfPXMS/yxo8El+/AJL5ye8kMJf23lKSSGGPgqFQuInskIHVqGqTvSw==",
  "_location": "/react-facebook-login",
  "_phantomChildren": {},
  "_requested": {
    "escapedName": "react-facebook-login",
    "fetchSpec": "latest",
    "name": "react-facebook-login",
    "raw": "react-facebook-login",
    "rawSpec": "",
    "registry": true,
    "saveSpec": null,
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "https://registry.npmjs.org/react-facebook-login/-/react-facebook-login-4.1.1.tgz",
  "_shasum": "005121236a6ac0dee02099976fb1a3265f9d633e",
  "_spec": "react-facebook-login",
  "_where": "/home/anwesha/Desktop/screencast",
  "author": {
    "email": "keppelen.as@gmail.com",
    "name": "Giovanni Keppelen"
  },
  "babel": {
    "plugins": [
      "transform-object-assign"
    ],
    "presets": [
      "es2015",
      "react",
      "stage-0"
    ]
  },
  "bugs": {
    "url": "https://github.com/keppelen/react-facebook-login/issues"
  },
  "bundleDependencies": false,
  "dependencies": {},
  "deprecated": false,
  "description": "A Component React for Facebook Login",
  "devDependencies": {
    "autoprefixer": "^6.0.3",
    "babel": "^6.5.2",
    "babel-core": "^6.6.5",
    "babel-eslint": "^4.1.6",
    "babel-loader": "^6.2.4",
    "babel-plugin-transform-object-assign": "^6.22.0",
    "babel-preset-es2015": "^6.1.18",
    "babel-preset-react": "^6.1.18",
    "babel-preset-stage-0": "^6.5.0",
    "cross-env": "^5.0.0",
    "css-loader": "^0.19.0",
    "eslint": "^1.10.3",
    "eslint-config-airbnb": "^2.0.0",
    "eslint-plugin-react": "^3.11.3",
    "node-sass": "^3.3.x",
    "postcss-loader": "^0.6.0",
    "prop-types": "^15.5.10",
    "react": "^16.2.0",
    "react-addons-test-utils": "^15.6.2",
    "react-css-modules": "^3.5.0",
    "react-dom": "^16.2.0",
    "react-router": "^3.0.0",
    "sass-loader": "^3.0.0",
    "style-loader": "0.12.x",
    "webpack": "1.12.x",
    "webpack-dev-server": "1.12.x"
  },
  "homepage": "https://github.com/keppelen/react-facebook-login",
  "keywords": [
    "facebook-login",
    "react",
    "react-component",
    "react-facebook-login",
    "reactjs"
  ],
  "license": "MIT",
  "main": "dist/facebook-login-with-button.js",
  "name": "react-facebook-login",
  "optionalDependencies": {},
  "peerDependencies": {
    "react": "^16.0.0"
  },
  "readme": "# React Facebook Login - [![Build Status](https://travis-ci.org/keppelen/react-facebook-login.svg?branch=master)](https://travis-ci.org/keppelen/react-facebook-login)\n\n> A Component React for Facebook Login\n\n## Getting Started\n\n- `yarn add react-facebook-login` or `npm install react-facebook-login`\n- Your application will also need `react-dom` and `react` installed.\n\n## Development\n\n```shell\ngit clone https://github.com/keppelen/react-facebook-login.git && cd react-facebook-login\nnpm install react react-dom react-facebook-login --save --force\nnpm start\n```\n- navigate to [localhost:8080](http://localhost:8080)\n\n## How to use\n\n### Basic button with styling\n\n```js\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport FacebookLogin from 'react-facebook-login';\n\nconst responseFacebook = (response) => {\n  console.log(response);\n}\n\nReactDOM.render(\n  <FacebookLogin\n    appId=\"1088597931155576\"\n    autoLoad={true}\n    fields=\"name,email,picture\"\n    onClick={componentClicked}\n    callback={responseFacebook} />,\n  document.getElementById('demo')\n);\n```\n\n### Facebook button without styling\n\nIf you're providing all your own custom styling, you can use the render prop build. This build doesn't include any CSS or additional code needed to customise the look of the button, and instead leaves that entirely up to you. You can see an example of this in `demo/index.js`.\n\nTo make sure you import the right version, you will need to update your import line:\n\n```js\nimport FacebookLogin from 'react-facebook-login/dist/facebook-login-render-props'\n```\n\n```\n<FacebookLogin\n  appId=\"1088597931155576\"\n  autoLoad\n  callback={responseFacebook}\n  render={renderProps => (\n    <button onClick={renderProps.onClick}>This is my custom FB button</button>\n  )}\n/>\n```\n\nThe `render` function will be passed the following properties for you to use:\n\n- `onClick`\n- `isDisabled`\n- `isProcessing`\n- `isSdkLoaded`\n\n\n### Custom CSS Class and Icon\n\nBy default fontawesome is included, If you don't want to use default fontawesome icons, you can send an element in icon attribute\n\nFontawesome example:\n```js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport FacebookLogin from 'react-facebook-login';\n\nconst responseFacebook = (response) => {\n  console.log(response);\n}\n\nReactDOM.render(\n  <FacebookLogin\n    appId=\"1088597931155576\"\n    autoLoad={true}\n    fields=\"name,email,picture\"\n    callback={responseFacebook}\n    cssClass=\"my-facebook-button-class\"\n    icon=\"fa-facebook\"\n  />,\n  document.getElementById('demo')\n);\n```\n\nCustom element example:\n```js\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport FacebookLogin from 'react-facebook-login';\nimport TiSocialFacebookCircular from 'react-icons/lib/ti/social-facebook-circular';\n\nconst responseFacebook = (response) => {\n  console.log(response);\n}\n\nReactDOM.render(\n  <FacebookLogin\n    appId=\"1088597931155576\"\n    autoLoad={true}\n    fields=\"name,email,picture\"\n    callback={responseFacebook}\n    cssClass=\"my-facebook-button-class\"\n    icon={<TiSocialFacebookCircular />}\n  />,\n  document.getElementById('demo')\n);\n```\n\n### Custom permission\nBy default the component, request only 'public_profile' permission, you can change if you send 'scope', that is a string comma separated attribute.\n\nsee https://developers.facebook.com/docs/facebook-login/permissions for permissions list\n\n```js\n  import React from 'react';\n  import FacebookLogin from 'react-facebook-login';\n\n  class MyComponent extends React.Component {\n    responseFacebook(response) {\n      console.log(response);\n    }\n\n    render() {\n      return (\n        <FacebookLogin\n          appId=\"1088597931155576\"\n          autoLoad={true}\n          fields=\"name,email,picture\"\n          scope=\"public_profile,user_friends,user_actions.books\"\n          callback={this.responseFacebook}\n        />\n      )\n    }\n  }\n\n  export default MyComponent;\n```\n\n### Server\n```js\n'use strict';\n\nimport React from 'react';\nimport FacebookLogin from 'react-facebook-login';\n\nclass MyComponent extends React.Component {\n  responseFacebook(response) {\n    console.log(response)\n  }\n\n  render() {\n    return (\n      <FacebookLogin\n        appId=\"1088597931155576\"\n        autoLoad={true}\n        fields=\"name,email,picture\"\n        callback={this.responseFacebook}\n      />\n    )\n  }\n}\n\nexport default MyComponent;\n```\n\n\n## Parameters\n\n|    params    |     value           |                default value                        |\n|:------------:|:-------------------:|:---------------------------------------------------:|\n|     appId    |     string          |                Required                             |\n|     size     |     string          |              small - medium - metro                 |\n|     scope    |     string          |      public_profile, email, user_birthday           |\n|     fields   |     string          |              name,email,picture                     |\n|   callback   |     function        |             resultFacebookLogin                     |\n| returnScopes |     boolean         |                  false                              |\n|   autoLoad   |     boolean         |                  false                              |\n|     xfbml    |     boolean         |                  false                              |\n|    cookie    |     boolean         |                  false                              |\n|   textButton |     string          |           Login with Facebook                       |\n|   cssClass   |     string          | kep-login-facebook kep-login-facebook-[button-size] |\n| redirectUri  |     string          |               window.location.href (mobile-only)    |\n|   version    |     string          |                  2.3                                |\n|   icon       |     string|element  |                  none                               |\n|   language   |     string          |                  en_US                              |\n|   onClick    |     function        |                  Initial click on the component     |\n|   isMobile   |     boolean         |                  detected via userAgent             |\n|   isDisabled |     boolean         |                  undefined                          |\n|     tag      |     string          |                  HTML Element, Ex: 'a', 'button'             |\n|   onFailure  |     function        | optional function to separatere the failed init     |\n|   state  |     string        | optional string to maintain state between the request and callback. This parameter should be used for preventing Cross-site Request Forgery and will be passed back to you, unchanged, in your redirect URI     |\n| authType | string | optional string to change authentication type |\n| responseType | string | optional string to change response type. Default value is 'code' |\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/keppelen/react-facebook-login.git"
  },
  "scripts": {
    "bundle": "cross-env NODE_ENV=production node_modules/.bin/webpack -p --config webpack.config.dist.js",
    "start": "cross-env NODE_ENV=development node_modules/.bin/webpack-dev-server --config webpack.config.js",
    "test": "eslint src/**/*.js"
  },
  "version": "4.1.1"
}
