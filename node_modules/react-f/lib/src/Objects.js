"use strict";
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
function set(data, field, value) {
    var _a, _b;
    var paths = field.split(".");
    var path0 = field.length === 1 ? field[0] : paths[0];
    if (paths.length > 1) {
        if (data instanceof Array) {
            var copy = data.slice();
            copy[+path0] = set(data[+path0] || (isNaN(paths[1]) ? {} : []), paths.slice(1).join("."), value);
            return copy;
        }
        else {
            return __assign({}, data, (_a = {}, _a[path0] = set(data[path0] || (isNaN(paths[1]) ? {} : []), paths.slice(1).join("."), value), _a));
        }
    }
    else if (path0 === "") {
        return value;
    }
    else {
        if (data instanceof Array) {
            var copy = data.slice();
            copy[+path0] = value;
            return copy;
        }
        else {
            return __assign({}, data, (_b = {}, _b[path0] = value, _b));
        }
    }
}
exports.set = set;
function get(data, field) {
    return field.split(".").reduce(function (obj, path) {
        return (null === obj || undefined === obj || !path)
            ? obj
            : obj[path];
    }, data);
}
exports.get = get;
function has(data, field) {
    var obj = data;
    return field.split(".").every(function (path) {
        if (obj && typeof obj[path] !== "undefined") {
            obj = obj[path];
            return true;
        }
        else {
            return false;
        }
    });
}
exports.has = has;
function keys(obj, prefix) {
    if (prefix === void 0) { prefix = ""; }
    var _a, _b;
    var dotPrefix = prefix ? prefix + "." : "";
    if (obj instanceof Array) {
        return (_a = Array.prototype.concat).call.apply(_a, [[]].concat(obj.map(function (_, idx) { return "" + dotPrefix + idx; }), obj.map(function (el, idx) { return keys(el, dotPrefix + idx); }).filter(Boolean)));
    }
    else if (["boolean", "number", "string", "function", "undefined"].indexOf(typeof obj) > -1) {
        return [];
    }
    else if (!!obj) {
        return (_b = Array.prototype.concat).call.apply(_b, [[]].concat(Object.keys(obj).map(function (key) { return "" + dotPrefix + key; }), Object.keys(obj).map(function (key) { return keys(obj[key], key); }).reduce(function (a1, a2) { return a1.concat(a2); })));
    }
    else {
        return [];
    }
}
exports.keys = keys;
function some(obj, predicate) {
    if (obj instanceof Array) {
        return obj.some(function (el) { return some(el, predicate); });
    }
    else if (["boolean", "number", "string", "function", "undefined"].indexOf(typeof obj) > -1) {
        return predicate(obj);
    }
    else if (!!obj) {
        return Object.keys(obj).some(function (key) { return some(obj[key], predicate); });
    }
    else {
        return false;
    }
}
exports.some = some;
//# sourceMappingURL=Objects.js.map