"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var SyncValidation_1 = require("../form/SyncValidation");
var AsyncValidation_1 = require("../form/AsyncValidation");
var createHOC_1 = require("../createHOC");
exports.default = createHOC_1.default({
    name: "Field/Validation",
    contextTypes: SyncValidation_1.default.IDs.concat(AsyncValidation_1.default.IDs),
    class: /** @class */ (function (_super) {
        __extends(class_1, _super);
        function class_1() {
            return _super !== null && _super.apply(this, arguments) || this;
        }
        class_1.prototype.getChildProps = function () {
            var _this = this;
            var syncProps = SyncValidation_1.default.props(this) || SyncValidation_1.default.defaultProps;
            var asyncProps = AsyncValidation_1.default.props(this) || AsyncValidation_1.default.defaultProps;
            var syncErrors = syncProps ? syncProps.getFieldErrors(this.props.field) : [];
            var asyncErrors = asyncProps ? asyncProps.getFieldErrors(this.props.field) : [];
            var errors = syncErrors.concat(asyncErrors);
            return {
                valid: errors.length === 0,
                errors: errors,
                validating: asyncProps && asyncProps.isFieldValidating(this.props.field),
                onBlur: function (e) { return asyncProps.validateField(_this.props.field); },
                setSyncErrors: function (errors) { return syncProps.setFieldErrors(_this.props.field, errors); },
                setAsyncErrors: function (errors) { return asyncProps.setFieldErrors(_this.props.field, errors); },
                validateField: function () { return asyncProps.validateField(_this.props.field); },
            };
        };
        return class_1;
    }(React.Component))
});
//# sourceMappingURL=Validation.js.map