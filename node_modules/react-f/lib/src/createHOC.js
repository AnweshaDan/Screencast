"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var PropTypes = require("prop-types");
var compose_1 = require("./compose");
function createHOC(args) {
    var ID = args.name + "_" + Math.random().toString(36).slice(2, 12); //Symbol(name)
    var HocFunc = function (o) {
        if (o === void 0) { o = {}; }
        var options = __assign({}, (args.defaultOptions || {}), o);
        return function (wrappedClass) {
            var baseClass = typeof args.getClass === "function" ? args.getClass(options) : args.class;
            return createHocClass({ baseClass: baseClass, name: args.name, ID: ID, wrappedClass: wrappedClass, contextTypes: args.contextTypes });
        };
    };
    /**
     * The HOC / Decorator itself
     * It is a callable Function with a class decorator like signature
     * but also an object having the properties 'props', 'defaultProps' extract' and 'ID'
     */
    var HOC = (function () {
        var _a;
        var func = function (o) { return compose_1.default.apply(void 0, (args.wrappers || []).concat([HocFunc(o)])); };
        func.props = function () {
            var objs = [];
            for (var _i = 0; _i < arguments.length; _i++) {
                objs[_i] = arguments[_i];
            }
            var props = objs.map(function (obj) { return obj.isReactComponent ? (obj.props[ID] || (obj.context || {})[ID]) : obj[ID]; }).filter(Boolean)[0];
            return typeof props !== "undefined" ? props : args.defaultChildProps;
        };
        func.extract = function (props) { var _a = ID, _b = props[_a], extracted = __rest(props, [typeof _a === "symbol" ? _a : _a + ""]); return extracted; };
        func.ID = ID;
        func.IDs = [ID];
        func.contextTypes = (_a = {}, _a[ID] = function () { return null; }, _a);
        func.defaultProps = args.defaultChildProps;
        return func;
    })();
    return HOC;
}
exports.default = createHOC;
/**
 * creates and returns a class that extends a given base class
 *
 * @param args.baseClass the class to extend - must implement the method 'getChildProps'
 * @returns a class that extends args.baseClass
 */
function createHocClass(args) {
    var _a;
    var _b;
    return _b = /** @class */ (function (_super) {
            __extends(class_1, _super);
            function class_1() {
                return _super !== null && _super.apply(this, arguments) || this;
            }
            class_1.prototype.getChildContext = function () {
                var _a;
                return _a = {},
                    _a[args.ID] = this.getChildProps(),
                    _a;
            };
            class_1.prototype.render = function () {
                var _a;
                return React.createElement(args.wrappedClass, __assign({}, this.props, (_a = {}, _a[args.ID] = this.getChildProps(), _a)));
            };
            return class_1;
        }(args.baseClass)),
        _b.displayName = args.name + "(" + (args.wrappedClass.displayName || args.wrappedClass.name) + ")",
        _b.contextTypes = __assign({}, (args.baseClass.contextTypes || {}), (args.contextTypes ?
            args.contextTypes.reduce(function (obj, key) { obj[key] = PropTypes.any; return obj; }, {}) :
            {})),
        _b.childContextTypes = __assign({}, (args.baseClass.childContextTypes || {}), (_a = {}, _a[args.ID] = PropTypes.any, _a)),
        _b;
}
//# sourceMappingURL=createHOC.js.map