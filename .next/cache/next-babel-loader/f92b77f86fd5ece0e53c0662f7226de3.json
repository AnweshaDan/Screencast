{"ast":null,"code":"import _JSXStyle from \"styled-jsx/style\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport axios from \"axios\";\nimport React from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Footer from \"../components/Footer\";\nimport Question from \"../components/Question\";\nimport Hint from \"../components/Hint\";\nimport AnsAlert from \"../components/AnsAlert\";\nimport Answer from \"../components/Answer\";\nimport Router from \"next/router\";\nimport data from '../env.json';\n\nclass game extends React.Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"submit\", event => {\n      //send final answer for checking\n      console.log(this.state.answer);\n      console.log(\"JOJOJOJOJOJ\");\n      this.checkAns(this.state.answer);\n    });\n\n    _defineProperty(this, \"submit2\", () => {\n      //send final answer for checking\n      console.log(this.state.answer);\n      this.checkAns(this.state.answer);\n    });\n\n    _defineProperty(this, \"change\", event => {\n      //keep updating answer\n      let e = event.target.value;\n      this.setState(prevState => {\n        return _objectSpread({}, prevState, {\n          answer: e\n        });\n      });\n    });\n\n    this.state = {\n      answer: \"\",\n      questions: \"\",\n      qsNo: 1,\n      audio: \"\",\n      image: \"\",\n      isLoggedIn: false,\n      hint: \"\",\n      day: \"\",\n      end: \"\",\n      message: \"\",\n      v: \"\"\n    };\n    this.submit = this.submit.bind(this);\n    this.submit2 = this.submit2.bind(this);\n    this.change = this.change.bind(this);\n    this.checkAns = this.checkAns.bind(this);\n    this.getQuestions = this.getQuestions.bind(this);\n  }\n\n  componentDidMount() {\n    axios.get(data.api + \"/api/status\").then(response => {\n      console.log(response);\n      var temp3 = new Date(response.data.start_time);\n      let temp2 = new Date(response.data.end_time);\n      localStorage.setItem('end', temp2.getTime() + temp2.getTimezoneOffset() * 60000);\n      localStorage.setItem(\"start\", temp3.getTime() + temp3.getTimezoneOffset() * 60000);\n      let temp = localStorage.getItem('end') - Date.now();\n      localStorage.setItem(\"day\", response.data.current_day);\n      console.log(temp);\n      console.log(localStorage.getItem('end'));\n      console.log(localStorage.getItem('day'));\n      this.setState({\n        v: setTimeout(function () {\n          AnsAlert(9);\n\n          if (localStorage.getItem('day') == 3 || response.data.error) {\n            Router.push('/game_finale');\n          } else {\n            Router.push('/finale2');\n          }\n        }, temp)\n      });\n      console.log(localStorage.getItem('end'));\n      this.setState({\n        day: localStorage.getItem('day'),\n        end: localStorage.getItem('end')\n      }, () => {\n        if (localStorage.getItem('day') == 3 && localStorage.getItem('end') < Date.now()) Router.push('/game_finale');\n        console.log(this.state.day + this.state.end);\n\n        if (!localStorage.getItem(\"email\")) {\n          AnsAlert(8);\n          Router.push('/');\n        } else if (!(localStorage.getItem('start') <= Date.now())) {\n          AnsAlert(8);\n          Router.push(\"/\");\n        } else {\n          console.log(\"YOOOOOOO\");\n          this.getQuestions();\n        }\n      });\n    });\n  }\n\n  getQuestions() {\n    console.log(this.state.qsNo);\n    console.log(localStorage.getItem(\"token\")); //get questions from api and updates state\n\n    axios.get(data.api + \"/api/question\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }).then(response => {\n      console.log(\"YOOO+\" + response); //if (response.data.error) Router.push(\"/finale2\");\n\n      if (response.data.quiz_finished) {\n        clearTimeout(this.state.v);\n        Router.push(\"/finale\");\n      }\n\n      this.setState(prevState => {\n        return _objectSpread({}, prevState, {\n          questions: response.data.question,\n          hint: response.data.hint,\n          qsNo: response.data.question_no,\n          audio: response.data.audio,\n          image: response.data.image\n        });\n      });\n    });\n    console.log(localStorage.getItem(\"token\"));\n  }\n\n  checkAns(ans //check answer from api and send for correct alert\n  ) {\n    console.log(ans);\n    console.log(this.state.qsNo);\n    axios.post(data.api + \"/api/checkanswer\", {\n      answer: ans\n    }, {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"token\")\n      }\n    }).then(response => {\n      let r = response.data.result;\n      console.log(response);\n\n      if (r && !response.data.quiz_finished) {\n        this.setState(prevState => {\n          return _objectSpread({}, prevState, {\n            qsNo: prevState.qsNo + 1,\n            answer: \"\"\n          });\n        });\n        AnsAlert(1); //where does the effing control go after this?\n\n        console.log(\"SANTA\");\n        this.setState({\n          answer: \"\"\n        });\n        this.getQuestions();\n      } else if (r && response.data.quiz_finished) {\n        AnsAlert(1);\n        clearTimeout(this.state.v);\n        Router.push(\"/finale\");\n      } else {\n        this.setState({\n          answer: \"\"\n        });\n        AnsAlert(0);\n      }\n    });\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      style: {\n        marginRight: \"auto\",\n        marginLeft: \"auto\",\n        textAlign: \"center\",\n        minHeight: \"100vh-100px\"\n      },\n      questions: true\n    }, __jsx(Navbar, null), __jsx(Question, {\n      qs: this.state.questions,\n      qsNo: this.state.qsNo,\n      audio: this.state.audio,\n      image: this.state.image,\n      day: this.state.day\n    }), __jsx(\"div\", {\n      className: \"jsx-4141458270\"\n    }, __jsx(Answer, {\n      change: this.change,\n      answer: this.state.answer\n    }), __jsx(Hint, {\n      hint: this.state.hint,\n      submit: this.submit,\n      submit2: this.submit2\n    }), __jsx(_JSXStyle, {\n      id: \"4141458270\"\n    }, [\"div.jsx-4141458270{text-align:center;margin:5px;margin-bottom:100px;}\"])), __jsx(\"div\", {\n      style: {\n        paddingTop: '220px'\n      }\n    }, __jsx(Footer, null)));\n  }\n\n}\n\nexport default game;","map":null,"metadata":{},"sourceType":"module"}