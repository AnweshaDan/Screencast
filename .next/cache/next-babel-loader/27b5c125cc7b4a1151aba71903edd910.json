{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport axios from \"axios\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { SocialMediaIconsReact } from 'social-media-icons-react';\nimport Router from \"next/router\";\nimport AnsAlert from \"../components/AnsAlert\";\nimport data from '../env.json';\n\nconst useStyles = theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(0)\n    }\n  }\n});\n\nclass GoogleLog extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"responseGoogle\", response => {\n      axios.post(data.api + \"/api/googlelogin\", {\n        token: response.tokenObj.access_token\n      }).then(res => {\n        localStorage.setItem('token', res.data.access_token); //localStorage.setItem('ref_token', res.data.refresh_token)\n\n        localStorage.setItem(\"email\", response.profileObj.email);\n        localStorage.setItem(\"name\", response.profileObj.name);\n        localStorage.setItem(\"image\", response.profileObj.imageUrl);\n        this.setState({\n          result: res.data.quiz_finished,\n          access: res.data.access_token,\n          userDetails: response.profileObj,\n          isUserLoggedIn: true\n        }, () => {\n          if (localStorage.getItem('start') <= Date.now()) {\n            if (!res.data.quiz_finished && localStorage.getItem('end') > Date.now()) Router.push('/game');else if (res.data.quiz_finished && localStorage.getItem('end') > Date.now()) {\n              Router.push('/finale');\n            } else if (res.data.error === \"No active quizes\") {\n              Router.push('/finale');\n            } else {\n              Router.push('/error');\n            }\n          } else Router.reload();\n        });\n      }).catch(err => {\n        console.log(err);\n      });\n    });\n\n    this.state = {\n      userDetails: {},\n      isUserLoggedIn: false,\n      access: \"\",\n      result: false\n    };\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem('day') == 3 && localStorage.getItem('end') < Date.now()) Router.push('/finale');else {\n      if (localStorage.getItem(\"email\")) {\n        this.setState({\n          isUserLoggedIn: true\n        }, () => {});\n      }\n    }\n  }\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return __jsx(\"div\", null, __jsx(\"div\", null, !this.state.isUserLoggedIn && __jsx(GoogleLogin, {\n      clientId: \"785334417583-prl4pto7m5cakqbes2p0h6nise9u7n17.apps.googleusercontent.com\",\n      render: renderProps => __jsx(\"div\", {\n        className: classes.root\n      }, __jsx(Button, {\n        style: {\n          backgroundColor: \"rgba(0,0,0,0)\",\n          padding: \"0\"\n        },\n        variant: \"contained\",\n        color: \"secondary\",\n        className: \"button\",\n        disableElevation: true,\n        onClick: renderProps.onClick\n      }, __jsx(SocialMediaIconsReact, {\n        borderColor: \"rgba(0,0,0,0.25)\",\n        borderWidth: \"4\",\n        borderStyle: \"inset\",\n        icon: \"googleplus\",\n        iconColor: \"rgba(255,255,255,1)\",\n        backgroundColor: \"rgba(223,48,28,1)\",\n        iconSize: \"7\",\n        roundness: \"29%\",\n        size: \"53\"\n      }))),\n      onSuccess: this.responseGoogle //isSignedIn ??\n      ,\n      onFailure: this.responseGoogle //handle later\n      ,\n      cookiePolicy: \"single_host_origin\"\n    })));\n  }\n\n}\n\nexport default withStyles(useStyles)(GoogleLog);","map":null,"metadata":{},"sourceType":"module"}