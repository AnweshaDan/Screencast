{"ast":null,"code":"var _jsxFileName = \"/home/rishav4101/Screencast/components/Leadertable.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport data from '../env.json';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Loader from \"./Loader\";\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: \"#000044\",\n    color: \"white\",\n    border: \"none\",\n    fontFamily: \"Russo One\",\n    fontSize: 16\n  },\n  body: {\n    fontFamily: \"Russo One\",\n    fontSize: 14,\n    color: \"#fff\",\n    border: \"none\"\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    \"&:nth-of-type(1)\": {\n      backgroundColor: \"rgba(0,200,0,0.4) !important\",\n      color: \"#000 !important\"\n    },\n    \"&:nth-of-type(2)\": {\n      backgroundColor: \"rgba(0,200,0,0.4) !important\",\n      color: \"#000 !important\"\n    },\n    \"&:nth-of-type(3)\": {\n      backgroundColor: \"rgba(0,200,0,0.4) !important\",\n      color: \"#000 !important\"\n    },\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"rgba(55,55,100,0.3)\",\n      color: \"#000 !important\"\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"rgba(0,0,0,0.7)\",\n      color: \"white !important\"\n    }\n  }\n}))(TableRow);\nconst useStyles = makeStyles({\n  table: {\n    marginTop: \"15px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    display: \"auto\",\n    width: \"90%\",\n    maxWidth: \"900px\",\n    position: \"relative\",\n    marginBottom: \"0px\",\n    overflowX: \"hidden\",\n    padding: \"10px\"\n  }\n});\nexport default function Leadertable() {\n  const {\n    0: RankList,\n    1: setRankList\n  } = useState(false);\n  const {\n    0: loaded,\n    1: setloaded\n  } = useState([]);\n  const classes = useStyles();\n  useEffect(() => {\n    axios.get(data.api + \"/api/leaderboard\").then(response => {\n      setRankList(response.data);\n    }).then(() => {\n      setloaded(true);\n    });\n  }, []);\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  }, loaded === true ? __jsx(\"div\", {\n    className: \"rtable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }\n  }, __jsx(Table, {\n    className: classes.table,\n    \"aria-label\": \"customized table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 11\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 15\n    }\n  }, __jsx(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Rank\"), __jsx(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }), __jsx(StyledTableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 17\n    }\n  }, \"Player\"), __jsx(StyledTableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Points\"))), RankList.length ? __jsx(TableBody, {\n    style: {\n      fontFamily: \"'Barlow', sans-serif\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 15\n    }\n  }, RankList.map((row, index) => __jsx(StyledTableRow, {\n    key: index,\n    style: {\n      fontFamily: \"'Barlow', sans-serif\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 19\n    }\n  }, __jsx(StyledTableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, row.rank, \".\"), __jsx(StyledTableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 21\n    }\n  }, __jsx(Avatar, {\n    alt: name,\n    src: row.imgurl,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 23\n    }\n  })), __jsx(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, row.name), __jsx(StyledTableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, row.score)))) : __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    style: {\n      fontFamily: \"'Russo One', sans-serif\",\n      fontSize: 18,\n      color: 'white'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 17\n    }\n  }, \"\\xA0\\xA0\\xA0Loading...\"))) : __jsx(Loader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }));\n}","map":{"version":3,"sources":["/home/rishav4101/Screencast/components/Leadertable.js"],"names":["React","useState","useEffect","withStyles","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Typography","axios","data","Avatar","Loader","StyledTableCell","theme","head","backgroundColor","color","border","fontFamily","fontSize","body","StyledTableRow","root","useStyles","table","marginTop","marginLeft","marginRight","display","width","maxWidth","position","marginBottom","overflowX","padding","Leadertable","RankList","setRankList","loaded","setloaded","classes","get","api","then","response","length","map","row","index","rank","name","imgurl","score","title"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Typography from \"@material-ui/core/Typography\";\nimport axios from \"axios\";\nimport data from '../env.json';\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Loader from \"./Loader\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#000044\",\n    color: \"white\",\n    border: \"none\",\n    fontFamily: \"Russo One\",\n    fontSize: 16\n  },\n  body: {\n    fontFamily: \"Russo One\",\n    fontSize: 14,\n    color: \"#fff\",\n    border: \"none\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(1)\": {\n      backgroundColor: \"rgba(0,200,0,0.4) !important\",\n      color: \"#000 !important\"\n    },\n    \"&:nth-of-type(2)\": {\n      backgroundColor: \"rgba(0,200,0,0.4) !important\",\n      color: \"#000 !important\"\n    },\n    \"&:nth-of-type(3)\": {\n      backgroundColor: \"rgba(0,200,0,0.4) !important\",\n      color: \"#000 !important\"\n    },\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"rgba(55,55,100,0.3)\",\n      color: \"#000 !important\"\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"rgba(0,0,0,0.7)\",\n      color: \"white !important\",\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    marginTop: \"15px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    display: \"auto\",\n    width:\"90%\",\n    maxWidth: \"900px\",\n    position: \"relative\",\n    marginBottom: \"0px\",\n    overflowX: \"hidden\",\n    padding:\"10px\"\n  },\n});\n\nexport default function Leadertable() {\n  const [RankList, setRankList] = useState(false);\n  const [loaded, setloaded] = useState([]);\n  const classes = useStyles();\n\n  useEffect(() => {\n    axios\n      .get(data.api + \"/api/leaderboard\")\n      .then((response) => {\n        setRankList(response.data);\n\n      })\n      .then(() => {\n        setloaded(true);\n      });\n  }, []);\n\n  return (\n    <div>\n      { (loaded === true) ?\n        <div className=\"rtable\">\n          <Table className={classes.table} aria-label=\"customized table\">\n            <TableHead>\n              <TableRow>\n                <StyledTableCell>Rank</StyledTableCell>\n                <StyledTableCell></StyledTableCell>\n                <StyledTableCell align=\"left\">Player</StyledTableCell>\n                <StyledTableCell align=\"left\">Points</StyledTableCell>\n              </TableRow>\n            </TableHead>\n            {RankList.length ? (\n              <TableBody style={{ fontFamily: \"'Barlow', sans-serif\" }}>\n                {RankList.map((row, index) => (\n                  <StyledTableRow\n                    key={index}\n                    style={{ fontFamily: \"'Barlow', sans-serif\" }}\n                  >\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                      {row.rank}.\n                  </StyledTableCell>\n                    <StyledTableCell align=\"left\">\n                      <Avatar\n                        alt={name}\n                        src={row.imgurl}\n                      /></StyledTableCell>\n                    <StyledTableCell>{row.name}</StyledTableCell>\n                    <StyledTableCell align=\"left\">{row.score}</StyledTableCell>\n                  </StyledTableRow>\n                ))}\n              </TableBody>\n            ) : (\n                <Typography\n                  variant=\"h6\"\n                  className={classes.title}\n                  style={{ fontFamily: \"'Russo One', sans-serif\", fontSize: 18, color: 'white' }}\n                >\n                  &nbsp;&nbsp;&nbsp;Loading...\n                </Typography>\n              )}\n          </Table>\n        </div>\n        : <Loader />}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}