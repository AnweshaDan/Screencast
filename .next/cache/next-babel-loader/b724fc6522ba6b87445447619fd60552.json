{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Link from \"next/link\";\nimport Fade from \"@material-ui/core/Fade\";\nimport Rules from \"./Rules\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport { GoogleLogout } from \"react-google-login\";\nimport Router from \"next/router\";\nimport Typography from \"@material-ui/core/Typography\";\nvar useStyles = makeStyles({\n  list: {\n    width: 300\n  }\n});\nexport default function TemporaryDrawer() {\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      Log = _useState[0],\n      setLog = _useState[1];\n\n  var _React$useState3 = React.useState({\n    left: false\n  }),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      state = _React$useState4[0],\n      setState = _React$useState4[1];\n\n  var handleClose = function handleClose() {\n    setAnchorEl(null);\n  };\n\n  useEffect(function () {\n    console.log(\"menu mounted\");\n    setLog(localStorage.getItem(\"email\"));\n    console.log(Log);\n  }, []);\n\n  var logout = function logout() {\n    //FB.logout();\n    //clearTimeout(localStorage.getItem(\"interval_id\"));\n    console.log(\"Lady\");\n\n    if (localStorage.getItem('start') < Date.now()) {\n      console.log(localStorage.getItem('start') < Date.now());\n      localStorage.removeItem('email');\n      Router.push('/');\n    } else {\n      console.log(localStorage.getItem('start') < Date.now());\n      localStorage.removeItem('email');\n      Router.reload('/');\n    }\n  };\n\n  var toggleDrawer = function toggleDrawer(anchor, open) {\n    return function (event) {\n      if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n        return;\n      }\n\n      setState(_objectSpread({}, state, _defineProperty({}, anchor, open)));\n    };\n  };\n\n  var list = function list(anchor) {\n    return __jsx(\"div\", {\n      className: clsx(classes.list),\n      role: \"presentation\",\n      onClick: toggleDrawer(anchor, false),\n      onKeyDown: toggleDrawer(anchor, false)\n    }, __jsx(List, null, __jsx(ListItem, {\n      button: true,\n      key: \"Home\"\n    }, __jsx(Link, {\n      href: \"/\"\n    }, __jsx(ListItemText, _defineProperty({\n      primary: \"Home\",\n      disableTypography: true\n    }, \"primary\", __jsx(Typography, {\n      style: {\n        color: '#FFFFFF',\n        fontFamily: \"'Russo One', sans-serif\",\n        fontSize: 18\n      }\n    }, \"Home\"))))), __jsx(ListItem, {\n      button: true,\n      key: \"Leaderboard\"\n    }, __jsx(Link, {\n      href: \"/leaderboard\"\n    }, __jsx(ListItemText, _defineProperty({\n      primary: \"Leaderboard\",\n      disableTypography: true\n    }, \"primary\", __jsx(Typography, {\n      style: {\n        color: '#FFFFFF',\n        fontFamily: \"'Russo One', sans-serif\",\n        fontSize: 18\n      }\n    }, \"Leaderboard\"))))), Log && __jsx(\"div\", {\n      className: \"userDetails-wrapper\"\n    }, __jsx(\"div\", {\n      className: \"details-wrapper\"\n    }, __jsx(GoogleLogout, {\n      render: function render(renderProps) {\n        return __jsx(\"div\", {\n          className: classes.root\n        }, __jsx(Link, {\n          href: \"/\"\n        }, __jsx(MenuItem, {\n          onClick: logout\n        }, __jsx(Typography, {\n          style: {\n            color: '#FFFFFF',\n            fontFamily: \"'Russo One', sans-serif\",\n            fontSize: 18\n          }\n        }, \"Logout\"))));\n      },\n      onLogoutSuccess: logout\n    })), __jsx(\"div\", {\n      className: \"bar\"\n    }), __jsx(\"div\", {\n      className: \"stand\"\n    }))));\n  };\n\n  console.log(\"return b4 menu\");\n  return __jsx(\"div\", null, ['left'].map(function (anchor) {\n    return __jsx(React.Fragment, {\n      key: anchor\n    }, __jsx(Button, {\n      onClick: toggleDrawer(anchor, true)\n    }, __jsx(MenuIcon, {\n      style: {\n        color: \"#fff\"\n      }\n    })), __jsx(Drawer, {\n      id: \"fade-menu\",\n      TransitionComponent: Fade,\n      marginThreshold: \"0px\",\n      anchorOrigin: {\n        vertical: \"top\",\n        horizontal: \"left\"\n      },\n      anchorPosition: {\n        left: \"0\",\n        top: \"0\"\n      },\n      transformOrigin: {\n        top: \"0px\",\n        left: \"0px\"\n      },\n      style: {\n        fontFamily: \"'Russo One', sans-serif\",\n        backgroundColor: \"rgba(0,0,0,0.5)\"\n      },\n      PaperProps: {\n        style: {\n          top: 0,\n          left: 0,\n          background: \"rgba(53,35,60,1)\",\n          borderRadius: \"0px\",\n          color: \"white\",\n          marginTop: \"0\",\n          paddingTop: [\"0px\"],\n          width: \"300px\",\n          maxHeight: \"100%\"\n        }\n      },\n      anchor: anchor,\n      open: state[anchor],\n      onClose: toggleDrawer(anchor, false)\n    }, list(anchor), __jsx(MenuItem, {\n      onClick: handleClose\n    }, __jsx(Rules, null, \"Rules\"))));\n  }));\n}\n/* <ListItem button key='Home'>\n          <Link href='/'>\n            <ListItemText primary='Home' />\n          </Link>\n        </ListItem>*/\n//<ListItemIcon><SportsEsportsIcon/></ListItemIcon>\n\n/*<ListItem button key='Game'>\n      <Link href='/game'>\n        \n        \n      <ListItemText primary='Game' />\n      </Link>\n    </ListItem>*/","map":null,"metadata":{},"sourceType":"module"}