{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"/home/rishav4101/Screencast/components/Navbar.js\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Test from \"./Test\";\nimport styles from \"./Navbar.module.css\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    root: {\n      flexGrow: 0,\n      backgroundColor: \"#000044\",\n      width: \"100%\",\n      padding: 0,\n      paddingBottom: \"50px\"\n    },\n    menuButton: {\n      marginRight: theme.spacing(0)\n    },\n    title: {\n      flexGrow: 0\n    },\n    ava: {\n      flexGrow: 0,\n      marginLeft: \"auto\"\n    }\n  };\n});\nexport default function Navbar(props) {\n  _s();\n\n  var classes = useStyles();\n\n  var _React$useState = React.useState(null),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      anchorEl = _React$useState2[0],\n      setAnchorEl = _React$useState2[1];\n\n  var open = Boolean(anchorEl); //to display avatar in logged in state\n\n  var _useState = useState(false),\n      isSignedIn = _useState[0],\n      setIsSigned = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      image = _useState3[0],\n      setImage = _useState3[1];\n\n  useEffect(function () {\n    if (localStorage.getItem(\"email\")) {\n      setIsSigned(true);\n      setName(localStorage.getItem(\"name\"));\n      setImage(localStorage.getItem(\"image\"));\n    }\n  });\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(AppBar, {\n    position: \"fixed\",\n    className: styles.navv,\n    style: {\n      padding: \"0px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(Toolbar, {\n    className: styles.navcontent,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, __jsx(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"white\",\n    \"aria-label\": \"menu\",\n    style: {\n      padding: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, __jsx(Test, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  })), __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    style: {\n      fontFamily: \"'Russo One', sans-serif\",\n      fontSize: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"\\xA0\\xA0\\xA0SCREENCAST 2020\"), __jsx(\"div\", {\n    className: classes.ava,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, isSignedIn ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, __jsx(Avatar, {\n    position: \"right\",\n    alt: name,\n    src: image,\n    className: styles.ava,\n    style: {\n      textAlign: \"right\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 17\n    }\n  })) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }\n  })))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }));\n}\n\n_s(Navbar, \"sJncpxrFyuGZDx/eaUVHLE5palY=\", false, function () {\n  return [useStyles];\n});\n\n_c = Navbar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"sources":["/home/rishav4101/Screencast/components/Navbar.js"],"names":["React","useState","useEffect","makeStyles","Avatar","AppBar","Toolbar","Typography","IconButton","Test","styles","useStyles","theme","root","flexGrow","backgroundColor","width","padding","paddingBottom","menuButton","marginRight","spacing","title","ava","marginLeft","Navbar","props","classes","anchorEl","setAnchorEl","open","Boolean","isSignedIn","setIsSigned","name","setName","image","setImage","localStorage","getItem","navv","navcontent","fontFamily","fontSize","textAlign"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Test from \"./Test\"\nimport styles from \"./Navbar.module.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 0,\n    backgroundColor: \"#000044\",\n    width: \"100%\",\n    padding: 0,\n    paddingBottom:\"50px\"\n  },\n  menuButton: {\n    marginRight: theme.spacing(0),\n  },\n  title: {\n    flexGrow: 0,\n  },\n  ava: {\n    flexGrow: 0,\n    marginLeft: \"auto\",\n  },\n}));\n\nexport default function Navbar(props) {\n\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  //to display avatar in logged in state\n  const [isSignedIn, setIsSigned] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n\n  useEffect(() => {\n    if (localStorage.getItem(\"email\")) {\n      setIsSigned(true);\n      setName(localStorage.getItem(\"name\"));\n      setImage(localStorage.getItem(\"image\"));\n    }\n  });\n  \n  return (\n    <div className={classes.root}>\n      <AppBar position=\"fixed\" className={styles.navv} style={{ padding: \"0px\" }}>\n        <Toolbar className={styles.navcontent}>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"white\"\n            aria-label=\"menu\"\n            style={{ padding: \"0\" }}\n          >\n            <Test />\n          </IconButton>\n          {/* <img src={logo} alt=\".\" style={{ width: \"45px\", borderRadius: \"50px\", boxShadow: \"1px 1px 2px #000\" }} /> */}\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n            style={{ fontFamily: \"'Russo One', sans-serif\", fontSize:20 }}\n          >\n            &nbsp;&nbsp;&nbsp;SCREENCAST 2020\n          </Typography>\n\n          <div className={classes.ava}>\n            {isSignedIn ? (\n              <div>\n                <Avatar\n                  position=\"right\"\n                  alt={name}\n                  src={image}\n                  className={styles.ava}\n                  style={{\n                    textAlign: \"right\",\n                  }}\n                />\n              </div>\n            ) : (\n                <div></div>\n              )}\n          </div>\n        </Toolbar>\n      </AppBar>\n      <div>\n      </div>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}