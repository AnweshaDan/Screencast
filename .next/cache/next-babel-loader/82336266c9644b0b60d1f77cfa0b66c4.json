{"ast":null,"code":"import Swal from 'sweetalert2';\nexport default (isCorrect => {\n  if (isCorrect == -11) //remove\n    Swal.fire({\n      padding: \"60px\",\n      position: 'center',\n      type: 'success',\n      title: 'Yay',\n      text: 'Successfully registered !',\n      showConfirmButton: false\n    });\n\n  if (isCorrect === 1) {\n    let timerInterval;\n    Swal.fire({\n      padding: \"60px\",\n      position: 'center',\n      icon: 'success',\n      type: 'success',\n      title: 'You gave the correct answer',\n      showConfirmButton: false,\n      timer: 2000,\n      timerProgressBar: true,\n      willOpen: () => {\n        Swal.showLoading();\n        timerInterval = setInterval(() => {}, 100);\n      },\n      onClose: () => {\n        clearInterval(timerInterval);\n      }\n    });\n  }\n\n  if (isCorrect === 0) {\n    let timerInterval;\n    Swal.fire({\n      padding: \"60px\",\n      position: 'center',\n      icon: 'error',\n      title: 'Oops! Wrong answer.',\n      text: 'Try again',\n      showConfirmButton: false,\n      timer: 2000,\n      timerProgressBar: true,\n      willOpen: () => {\n        Swal.showLoading();\n        timerInterval = setInterval(() => {}, 100);\n      },\n      onClose: () => {\n        clearInterval(timerInterval);\n      }\n    });\n  }\n\n  if (isCorrect === 9) {\n    let timerInterval;\n    Swal.fire({\n      padding: \"60px\",\n      position: 'center',\n      icon: 'error',\n      title: 'Times up!',\n      text: 'Ahaaa sorry!',\n      showConfirmButton: false,\n      timer: 2000,\n      timerProgressBar: true,\n      willOpen: () => {\n        Swal.showLoading();\n        timerInterval = setInterval(() => {}, 100);\n      },\n      onClose: () => {\n        clearInterval(timerInterval);\n      }\n    });\n  }\n\n  if (isCorrect === 8) Swal.fire({\n    padding: \"60px\",\n    position: 'center',\n    icon: 'info',\n    title: 'Error !',\n    text: 'Looks like you are not logged in ;_;',\n    showConfirmButton: false\n  });\n});","map":{"version":3,"sources":["/home/anwesha/Desktop/screencast/components/AnsAlert.js"],"names":["Swal","isCorrect","fire","padding","position","type","title","text","showConfirmButton","timerInterval","icon","timer","timerProgressBar","willOpen","showLoading","setInterval","onClose","clearInterval"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,aAAjB;AAEA,gBAAgBC,SAAD,IAAe;AAC1B,MAAIA,SAAS,IAAI,CAAC,EAAlB,EAAqB;AACjBD,IAAAA,IAAI,CAACE,IAAL,CAAU;AACNC,MAAAA,OAAO,EAAE,MADH;AAENC,MAAAA,QAAQ,EAAE,QAFJ;AAGNC,MAAAA,IAAI,EAAE,SAHA;AAINC,MAAAA,KAAK,EAAE,KAJD;AAKNC,MAAAA,IAAI,EAAE,2BALA;AAONC,MAAAA,iBAAiB,EAAE;AAPb,KAAV;;AAWJ,MAAIP,SAAS,KAAK,CAAlB,EACA;AACI,QAAIQ,aAAJ;AACAT,IAAAA,IAAI,CAACE,IAAL,CAAU;AACNC,MAAAA,OAAO,EAAE,MADH;AAENC,MAAAA,QAAQ,EAAE,QAFJ;AAGNM,MAAAA,IAAI,EAAE,SAHA;AAINL,MAAAA,IAAI,EAAE,SAJA;AAKNC,MAAAA,KAAK,EAAE,6BALD;AAMNE,MAAAA,iBAAiB,EAAE,KANb;AAONG,MAAAA,KAAK,EAAE,IAPD;AAQNC,MAAAA,gBAAgB,EAAE,IARZ;AASNC,MAAAA,QAAQ,EAAE,MAAM;AACZb,QAAAA,IAAI,CAACc,WAAL;AACAL,QAAAA,aAAa,GAAGM,WAAW,CAAC,MAAM,CAEjC,CAF0B,EAExB,GAFwB,CAA3B;AAGH,OAdK;AAeNC,MAAAA,OAAO,EAAE,MAAM;AACXC,QAAAA,aAAa,CAACR,aAAD,CAAb;AACH;AAjBK,KAAV;AAqBH;;AACO,MAAIR,SAAS,KAAK,CAAlB,EACA;AAAI,QAAIQ,aAAJ;AACAT,IAAAA,IAAI,CAACE,IAAL,CAAU;AACNC,MAAAA,OAAO,EAAE,MADH;AAENC,MAAAA,QAAQ,EAAE,QAFJ;AAGNM,MAAAA,IAAI,EAAE,OAHA;AAINJ,MAAAA,KAAK,EAAE,qBAJD;AAKNC,MAAAA,IAAI,EAAE,WALA;AAMNC,MAAAA,iBAAiB,EAAE,KANb;AAONG,MAAAA,KAAK,EAAE,IAPD;AAQNC,MAAAA,gBAAgB,EAAE,IARZ;AASNC,MAAAA,QAAQ,EAAE,MAAM;AACZb,QAAAA,IAAI,CAACc,WAAL;AACAL,QAAAA,aAAa,GAAGM,WAAW,CAAC,MAAM,CAEjC,CAF0B,EAExB,GAFwB,CAA3B;AAGH,OAdK;AAeNC,MAAAA,OAAO,EAAE,MAAM;AACXC,QAAAA,aAAa,CAACR,aAAD,CAAb;AACH;AAjBK,KAAV;AAqBX;;AACG,MAAIR,SAAS,KAAK,CAAlB,EACA;AACI,QAAIQ,aAAJ;AACAT,IAAAA,IAAI,CAACE,IAAL,CAAU;AACNC,MAAAA,OAAO,EAAE,MADH;AAENC,MAAAA,QAAQ,EAAE,QAFJ;AAGNM,MAAAA,IAAI,EAAE,OAHA;AAINJ,MAAAA,KAAK,EAAE,WAJD;AAKNC,MAAAA,IAAI,EAAE,cALA;AAMNC,MAAAA,iBAAiB,EAAE,KANb;AAONG,MAAAA,KAAK,EAAE,IAPD;AAQFC,MAAAA,gBAAgB,EAAE,IARhB;AASFC,MAAAA,QAAQ,EAAE,MAAM;AACZb,QAAAA,IAAI,CAACc,WAAL;AACAL,QAAAA,aAAa,GAAGM,WAAW,CAAC,MAAM,CAEjC,CAF0B,EAExB,GAFwB,CAA3B;AAGH,OAdC;AAeFC,MAAAA,OAAO,EAAE,MAAM;AACXC,QAAAA,aAAa,CAACR,aAAD,CAAb;AACH;AAjBC,KAAV;AAqBH;;AAED,MAAIR,SAAS,KAAK,CAAlB,EACAD,IAAI,CAACE,IAAL,CAAU;AACNC,IAAAA,OAAO,EAAE,MADH;AAENC,IAAAA,QAAQ,EAAE,QAFJ;AAGNM,IAAAA,IAAI,EAAE,MAHA;AAINJ,IAAAA,KAAK,EAAE,SAJD;AAKNC,IAAAA,IAAI,EAAE,sCALA;AAMNC,IAAAA,iBAAiB,EAAE;AANb,GAAV;AAYP,CArGD","sourcesContent":["import Swal from 'sweetalert2';\n\nexport default (isCorrect) => {\n    if (isCorrect == -11)//remove\n        Swal.fire({\n            padding: \"60px\",\n            position: 'center',\n            type: 'success',\n            title: 'Yay',\n            text: 'Successfully registered !',\n            \n            showConfirmButton: false,\n\n\n        })\n    if (isCorrect === 1)\n    {\n        let timerInterval;\n        Swal.fire({\n            padding: \"60px\",\n            position: 'center',\n            icon: 'success',\n            type: 'success',\n            title: 'You gave the correct answer',\n            showConfirmButton: false,\n            timer: 2000,\n            timerProgressBar: true,\n            willOpen: () => {\n                Swal.showLoading()\n                timerInterval = setInterval(() => {\n                \n                }, 100)\n            },\n            onClose: () => {\n                clearInterval(timerInterval)\n            }\n            })\n\n\n    }\n            if (isCorrect === 0)\n            {   let timerInterval\n                Swal.fire({\n                    padding: \"60px\",\n                    position: 'center',\n                    icon: 'error',\n                    title: 'Oops! Wrong answer.',\n                    text: 'Try again',\n                    showConfirmButton: false,\n                    timer: 2000,\n                    timerProgressBar: true,\n                    willOpen: () => {\n                        Swal.showLoading()\n                        timerInterval = setInterval(() => {\n                        \n                        }, 100)\n                    },\n                    onClose: () => {\n                        clearInterval(timerInterval)\n                    }  \n        \n\n            })\n    }\n        if (isCorrect === 9)\n        {\n            let timerInterval;\n            Swal.fire({\n                padding: \"60px\",\n                position: 'center',\n                icon: 'error',\n                title: 'Times up!',\n                text: 'Ahaaa sorry!',\n                showConfirmButton: false,\n                timer: 2000,\n                    timerProgressBar: true,\n                    willOpen: () => {\n                        Swal.showLoading()\n                        timerInterval = setInterval(() => {\n                        \n                        }, 100)\n                    },\n                    onClose: () => {\n                        clearInterval(timerInterval)\n                    }  \n    \n            })\n\n        }\n        \n        if (isCorrect === 8)\n        Swal.fire({\n            padding: \"60px\",\n            position: 'center',\n            icon: 'info',\n            title: 'Error !',\n            text: 'Looks like you are not logged in ;_;',\n            showConfirmButton: false\n\n        })\n\n\n\n}"]},"metadata":{},"sourceType":"module"}