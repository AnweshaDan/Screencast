{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Typography from \"@material-ui/core/Typography\";\nvar Transition = React.forwardRef(function Transition(props, ref) {\n  return __jsx(Slide, _extends({\n    direction: \"up\",\n    ref: ref\n  }, props));\n});\nexport default function Rules() {\n  var _ref;\n\n  var _React$useState = React.useState(false),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      open = _React$useState2[0],\n      setOpen = _React$useState2[1];\n\n  var handleClickOpen = function handleClickOpen() {\n    setOpen(true);\n  };\n\n  var handleClose = function handleClose() {\n    setOpen(false);\n  };\n\n  return __jsx(\"div\", null, __jsx(\"div\", {\n    style: (_ref = {\n      color: \"white\",\n      width: \"370px\"\n    }, _defineProperty(_ref, \"color\", '#FFFFFF'), _defineProperty(_ref, \"fontFamily\", \"'Russo One', sans-serif\"), _defineProperty(_ref, \"fontSize\", 18), _ref),\n    onClick: handleClickOpen\n  }, \"Rules\"), __jsx(Dialog, {\n    open: open,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: handleClose,\n    \"aria-labelledby\": \"alert-dialog-slide-title\",\n    \"aria-describedby\": \"alert-dialog-slide-description\"\n  }, __jsx(DialogTitle, {\n    id: \"alert-dialog-slide-title\"\n  }, \"Rules\"), __jsx(DialogContent, null, __jsx(DialogContentText, {\n    id: \"alert-dialog-slide-description\"\n  }, __jsx(Typography, null, __jsx(\"ol\", {\n    className: \"p-3\"\n  }, __jsx(\"li\", null, \"The quiz comprises of 3 levels with 10 questions each.\"), __jsx(\"li\", null, \"Each question carries 10 marks.\"), __jsx(\"li\", null, \"The one who finishes the quiz first is the winner.\"), __jsx(\"li\", null, \"You can go to the next question only after getting the current question correct.\"), __jsx(\"li\", null, \"A level can be played only between its start and end timings.\"))))), __jsx(DialogActions, null, __jsx(Button, {\n    onClick: handleClose,\n    color: \"primary\"\n  }, \"Got it !\"))));\n}","map":null,"metadata":{},"sourceType":"module"}