{"ast":null,"code":"var __jsx = React.createElement;\nimport '../style.css';\nimport React from 'react';\nimport App from 'next/app';\nimport Head from \"next/head\";\nimport Router from \"next/router\";\nimport { ThemeProvider } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Loader from \"../components/Loader.js\";\n\nclass MyApp extends App {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loaded: false\n    };\n  }\n\n  componentDidMount() {\n    const jssStyles = document.querySelector(\"#jss-server-side\");\n\n    if (jssStyles) {\n      jssStyles.parentElement.removeChild(jssStyles);\n    }\n\n    this.setState({\n      loaded: true\n    });\n    Router.events.on(\"routeChangeStart\", () => this.setState({\n      loaded: false\n    }));\n    Router.events.on(\"routeChangeComplete\", () => this.setState({\n      loaded: true\n    }));\n  }\n\n  render() {\n    const {\n      Component,\n      pageProps\n    } = this.props;\n    return __jsx(React.Fragment, null, __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"meta\", {\n      charSet: \"UTF-8\"\n    }), __jsx(\"meta\", {\n      name: \"viewport\",\n      content: \"width=device-width, initial-scale=1.0\"\n    }), __jsx(\"title\", null, \"Screencast\"), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      type: \"text/css\",\n      href: \"question.css\"\n    })), __jsx(ThemeProvider, null, __jsx(CssBaseline, null), this.state.loaded ? __jsx(Component, pageProps) : __jsx(Loader, null))));\n  }\n\n}\n\nexport default MyApp;","map":null,"metadata":{},"sourceType":"module"}