{"ast":null,"code":"var _jsxFileName = \"/home/rishav/screencast/Screencast/components/Leadertable.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport styles from './Leadertable.module.css';\nconst StyledTableCell = withStyles(theme => ({\n  head: {\n    backgroundColor: \"#000033\",\n    color: \"white\",\n    border: \"none\"\n  },\n  body: {\n    fontSize: 14,\n    color: \"white\",\n    border: \"none\"\n  }\n}))(TableCell);\nconst StyledTableRow = withStyles(theme => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: \"rgba(255,255,255,0.4)\"\n    },\n    '&:nth-of-type(even)': {\n      backgroundColor: \"rgba(0,0,0,0.5)\",\n      color: \"white\"\n    }\n  }\n}))(TableRow);\n\nfunction createData(Rank, Player, Points) {\n  return {\n    Rank,\n    Player,\n    Points\n  };\n}\n\nconst rows = [createData(1, 'A', 50), createData(1, 'A', 50), createData(1, 'A', 50), createData(1, 'A', 50), createData(1, 'A', 50), createData(1, 'A', 50), createData(1, 'A', 50), createData(1, 'A', 50)];\nconst useStyles = makeStyles({\n  table: {\n    marginTop: \"10px\",\n    marginLeft: \"10px\",\n    marginRight: \"10px\",\n    paddingTop: \"10px\",\n    alignContent: \"center\",\n    textAlign: \"center\",\n    maxWidth: '700px',\n    position: \"absolute\"\n  }\n});\nexport default function CustomizedTables() {\n  const classes = useStyles();\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 5\n    }\n  }, __jsx(Table, {\n    className: classes.table,\n    \"aria-label\": \"customized table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }\n  }, __jsx(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, \"Rank\"), __jsx(StyledTableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }\n  }, \"Player\"), __jsx(StyledTableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, \"Points\"))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 9\n    }\n  }, rows.map(row => __jsx(StyledTableRow, {\n    key: row.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }\n  }, __jsx(StyledTableCell, {\n    component: \"th\",\n    scope: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 15\n    }\n  }, row.Rank), __jsx(StyledTableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, row.Player), __jsx(StyledTableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, row.Points))))));\n}","map":{"version":3,"sources":["/home/rishav/screencast/Screencast/components/Leadertable.js"],"names":["React","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","styles","StyledTableCell","theme","head","backgroundColor","color","border","body","fontSize","StyledTableRow","root","createData","Rank","Player","Points","rows","useStyles","table","marginTop","marginLeft","marginRight","paddingTop","alignContent","textAlign","maxWidth","position","CustomizedTables","classes","map","row","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,0BAAvC;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,OAAOC,KAAP,MAAkB,yBAAlB;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAIA,MAAMC,eAAe,GAAGV,UAAU,CAAEW,KAAD,KAAY;AAC7CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,eAAe,EAAE,SADb;AAEJC,IAAAA,KAAK,EAAE,OAFH;AAGJC,IAAAA,MAAM,EAAE;AAHJ,GADuC;AAM7CC,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE,EADN;AAEJH,IAAAA,KAAK,EAAE,OAFH;AAGJC,IAAAA,MAAM,EAAE;AAHJ;AANuC,CAAZ,CAAD,CAAV,CAWpBX,SAXoB,CAAxB;AAaA,MAAMc,cAAc,GAAGlB,UAAU,CAAEW,KAAD,KAAY;AAC5CQ,EAAAA,IAAI,EAAE;AACJ,0BAAsB;AACpBN,MAAAA,eAAe,EAAE;AADG,KADlB;AAIJ,2BAAuB;AACrBA,MAAAA,eAAe,EAAE,iBADI;AAErBC,MAAAA,KAAK,EAAE;AAFc;AAJnB;AADsC,CAAZ,CAAD,CAAV,CAUnBP,QAVmB,CAAvB;;AAYA,SAASa,UAAT,CAAoBC,IAApB,EAA0BC,MAA1B,EAAkCC,MAAlC,EAA0C;AACxC,SAAO;AAAEF,IAAAA,IAAF;AAAQC,IAAAA,MAAR;AAAgBC,IAAAA;AAAhB,GAAP;AACD;;AAED,MAAMC,IAAI,GAAG,CACXJ,UAAU,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CADC,EAEXA,UAAU,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CAFC,EAGXA,UAAU,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CAHC,EAIXA,UAAU,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CAJC,EAKXA,UAAU,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CALC,EAMXA,UAAU,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CANC,EAOXA,UAAU,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CAPC,EAQXA,UAAU,CAAC,CAAD,EAAI,GAAJ,EAAS,EAAT,CARC,CAAb;AAYA,MAAMK,SAAS,GAAGxB,UAAU,CAAC;AAC3ByB,EAAAA,KAAK,EAAE;AACLC,IAAAA,SAAS,EAAE,MADN;AAELC,IAAAA,UAAU,EAAE,MAFP;AAGLC,IAAAA,WAAW,EAAE,MAHR;AAILC,IAAAA,UAAU,EAAE,MAJP;AAKLC,IAAAA,YAAY,EAAE,QALT;AAMLC,IAAAA,SAAS,EAAE,QANN;AAOLC,IAAAA,QAAQ,EAAE,OAPL;AAQLC,IAAAA,QAAQ,EAAE;AARL;AADoB,CAAD,CAA5B;AAaA,eAAe,SAASC,gBAAT,GAA4B;AACzC,QAAMC,OAAO,GAAGX,SAAS,EAAzB;AAEA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,MAAC,KAAD;AAAO,IAAA,SAAS,EAAEW,OAAO,CAACV,KAA1B;AAAiC,kBAAW,kBAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAEE,MAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,EAGE,MAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,CADF,CADF,EASE,MAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,IAAI,CAACa,GAAL,CAAUC,GAAD,IACR,MAAC,cAAD;AAAgB,IAAA,GAAG,EAAEA,GAAG,CAACC,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,eAAD;AAAiB,IAAA,SAAS,EAAC,IAA3B;AAAgC,IAAA,KAAK,EAAC,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,GAAG,CAACjB,IADP,CADF,EAIE,MAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BiB,GAAG,CAAChB,MAAnC,CAJF,EAKE,MAAC,eAAD;AAAiB,IAAA,KAAK,EAAC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA+BgB,GAAG,CAACf,MAAnC,CALF,CADD,CADH,CATF,CAHF,CADF;AA+BD","sourcesContent":["import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport styles from './Leadertable.module.css'\n\n\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#000033\",\n    color: \"white\",\n    border: \"none\",\n  },\n  body: {\n    fontSize: 14,\n    color: \"white\",\n    border: \"none\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: \"rgba(255,255,255,0.4)\",\n    },\n    '&:nth-of-type(even)': {\n      backgroundColor: \"rgba(0,0,0,0.5)\",\n      color: \"white\",\n    },\n  },\n}))(TableRow);\n\nfunction createData(Rank, Player, Points) {\n  return { Rank, Player, Points };\n}\n\nconst rows = [\n  createData(1, 'A', 50),\n  createData(1, 'A', 50),\n  createData(1, 'A', 50),\n  createData(1, 'A', 50),\n  createData(1, 'A', 50),\n  createData(1, 'A', 50),\n  createData(1, 'A', 50),\n  createData(1, 'A', 50),\n\n];\n\nconst useStyles = makeStyles({\n  table: {\n    marginTop: \"10px\",\n    marginLeft: \"10px\",\n    marginRight: \"10px\",\n    paddingTop: \"10px\",\n    alignContent: \"center\",\n    textAlign: \"center\",\n    maxWidth: '700px',\n    position: \"absolute\"\n  },\n});\n\nexport default function CustomizedTables() {\n  const classes = useStyles();\n\n  return (\n    <div>\n\n\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell>Rank</StyledTableCell>\n            <StyledTableCell align=\"left\">Player</StyledTableCell>\n            <StyledTableCell align=\"left\">Points</StyledTableCell>\n\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {rows.map((row) => (\n            <StyledTableRow key={row.name}>\n              <StyledTableCell component=\"th\" scope=\"row\">\n                {row.Rank}\n              </StyledTableCell>\n              <StyledTableCell align=\"left\">{row.Player}</StyledTableCell>\n              <StyledTableCell align=\"left\">{row.Points}</StyledTableCell>\n\n\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}