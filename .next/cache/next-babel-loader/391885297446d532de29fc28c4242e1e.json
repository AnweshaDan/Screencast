{"ast":null,"code":"var _jsxFileName = \"/home/anwesha/Desktop/screencast/components/Leadertable.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport styles from './Leadertable.module.css';\nvar StyledTableCell = withStyles(function (theme) {\n  return {\n    head: {\n      backgroundColor: theme.palette.common.black,\n      color: theme.palette.common.white\n    },\n    body: {\n      fontSize: 14\n    }\n  };\n})(TableCell);\nvar StyledTableRow = withStyles(function (theme) {\n  return {\n    root: {\n      '&:nth-of-type(odd)': {\n        backgroundColor: theme.palette.background[\"default\"]\n      }\n    }\n  };\n})(TableRow);\n\nfunction createData(No, Player) {\n  return {\n    No: No,\n    Player: Player\n  };\n}\n\nvar rows = [createData(1, 'A'), createData(1, 'A'), createData(1, 'A'), createData(1, 'A')];\nvar useStyles = makeStyles({\n  table: {\n    minWidth: 700\n  }\n});\nexport default function CustomizedTables() {\n  var _this = this;\n\n  var classes = useStyles();\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, __jsx(\"h1\", {\n    className: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 11\n    }\n  }, \" LEADERBOARD\"), __jsx(TableContainer, {\n    component: Paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }\n  }, __jsx(Table, {\n    className: classes.table,\n    \"aria-label\": \"customized table\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }, __jsx(TableHead, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 17\n    }\n  }, __jsx(TableRow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 17\n    }\n  }, __jsx(StyledTableCell, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 21\n    }\n  }, \"No\"), __jsx(StyledTableCell, {\n    align: \"left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }\n  }, \"Player\"))), __jsx(TableBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, rows.map(function (row) {\n    return __jsx(StyledTableRow, {\n      key: row.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, __jsx(StyledTableCell, {\n      component: \"th\",\n      scope: \"row\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }\n    }, row.No), __jsx(StyledTableCell, {\n      align: \"left\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }\n    }, row.Player));\n  })))));\n}","map":{"version":3,"sources":["/home/anwesha/Desktop/screencast/components/Leadertable.js"],"names":["React","withStyles","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","styles","StyledTableCell","theme","head","backgroundColor","palette","common","black","color","white","body","fontSize","StyledTableRow","root","background","createData","No","Player","rows","useStyles","table","minWidth","CustomizedTables","classes","container","map","row","name"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport styles from './Leadertable.module.css';\n\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: theme.palette.background.default,\n    },\n  },\n}))(TableRow);\n\nfunction createData(No,Player) {\n  return { No,Player};\n}\n\nconst rows = [\n  createData(1, 'A'),\n  createData(1, 'A'),\n  createData(1, 'A'),\n  createData(1, 'A')\n];\n\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 700,\n  },\n});\n\nexport default function CustomizedTables() {\n  const classes = useStyles();\n\n  return (\n      <div>\n          <h1 className={styles.container}> LEADERBOARD</h1>\n            <TableContainer component={Paper}>\n            <Table className={classes.table} aria-label=\"customized table\">\n                <TableHead>\n                <TableRow>\n                    <StyledTableCell>No</StyledTableCell>\n                    <StyledTableCell align=\"left\">Player</StyledTableCell>\n                \n                </TableRow>\n                </TableHead>\n                <TableBody>\n                {rows.map((row) => (\n                    <StyledTableRow key={row.name}>\n                    <StyledTableCell component=\"th\" scope=\"row\">\n                        {row.No}\n                    </StyledTableCell>\n                    <StyledTableCell align=\"left\">{row.Player}</StyledTableCell>\n                    \n                    \n                    </StyledTableRow>\n                ))}\n                </TableBody>\n            </Table>\n            </TableContainer>\n        </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}