{"ast":null,"code":"var _jsxFileName = \"/home/anwesha/Desktop/screencast/components/GoogleLog.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport axios from \"axios\";\nimport Head from \"next/head\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { SocialMediaIconsReact } from 'social-media-icons-react';\nimport Router from \"next/router\";\nimport AnsAlert from \"../components/AnsAlert\";\nimport data from '../env.json';\n\nconst useStyles = theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(0)\n    }\n  }\n});\n\nclass GoogleLog extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"responseGoogle\", response => {\n      console.log(response); //localStorage.setItem('token', response.tokenObj.access_token)\n\n      axios.post(data.api + \"/api/googlelogin\", {\n        token: response.tokenObj.access_token\n      }).then(res => {\n        console.log(res);\n\n        if (res.data.quiz_finished) {\n          console.log('yes');\n          Router.push('/finale', undefined, {\n            shallow: true\n          });\n          console.log(\"yesyes\");\n        }\n\n        console.log(\"jajajaj\");\n        localStorage.setItem('token', res.data.access_token); //localStorage.setItem('ref_token', res.data.refresh_token)\n\n        localStorage.setItem(\"email\", response.profileObj.email);\n        localStorage.setItem(\"name\", response.profileObj.name);\n        localStorage.setItem(\"image\", response.profileObj.imageUrl);\n        this.setState({\n          access: res.data.access_token,\n          userDetails: response.profileObj,\n          isUserLoggedIn: true\n        }, () => {\n          if (localStorage.getItem('start') <= Date.now()) Router.push(\"/game\");else Router.reload();\n        }); //this.refresh(res.data.access_token,res.data.refresh_token);\n\n        /* if ((localStorage.getItem('start') <= Date.now()))\n          Router.push(\"/game\");*/\n      });\n    });\n\n    this.state = {\n      userDetails: {},\n      isUserLoggedIn: false,\n      access: \"\"\n    }; //this.refresh=this.refresh.bind(this);\n  }\n\n  componentDidMount() {\n    if (localStorage.getItem(\"email\")) {\n      this.setState({\n        isUserLoggedIn: true\n      });\n      console.log('mounted'); //if((localStorage.getItem('start') < Date.now())) Router.push(\"/game\");\n    }\n    /*if (localStorage.getItem(\"email\") && ((localStorage.getItem('start') <= Date.now()))) {\n      //this.refresh(localStorage.getItem('token'),localStorage.getItem('ref_token'))\n      console.log(\"email yes timer yes\")\n      //Router.push(\"/game\");\n    }\n    else\n    {\n      console.log(\"timer no\");\n      //Router.push('/');  \n    }*/\n\n  }\n  /*refresh=(a,r)=>{\n    console.log(r)\n    localStorage.setItem(\"token\",a);\n    console.log(localStorage.getItem(\"token\"));\n     const t=setInterval(()=>{\n      \n      axios.post(\"https://https://screencast2020.herokuapp.com/api/refresh\",{\n        refresh:r\n      }).then((re)=>{\n        \n        console.log(re);\n        localStorage.setItem(\"token\",re.data.access);\n        this.setState({access:re.data.access})\n        console.log(localStorage.getItem(\"token\"));\n    \n      })\n    },50000)\n    localStorage.setItem(\"interval_id\",t);\n    \n  }*/\n\n\n  render() {\n    console.log(\"render of google\");\n    const {\n      classes\n    } = this.props;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }\n    })), __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }\n    }, !this.state.isUserLoggedIn && __jsx(GoogleLogin, {\n      clientId: \"1091948986515-evn13uscvig9k6olefvrkdk3q374iumi.apps.googleusercontent.com\",\n      render: renderProps => __jsx(\"div\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 17\n        }\n      }, __jsx(Button, {\n        style: {\n          backgroundColor: \"rgba(0,0,0,0)\",\n          padding: \"0\"\n        },\n        variant: \"contained\",\n        color: \"secondary\",\n        className: \"button\",\n        onClick: renderProps.onClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 19\n        }\n      }, __jsx(SocialMediaIconsReact, {\n        borderColor: \"rgba(0,0,0,0.25)\",\n        borderWidth: \"4\",\n        borderStyle: \"inset\",\n        icon: \"googleplus\",\n        iconColor: \"rgba(255,255,255,1)\",\n        backgroundColor: \"rgba(223,48,28,1)\",\n        iconSize: \"7\",\n        roundness: \"29%\",\n        size: \"53\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }\n      }))),\n      onSuccess: this.responseGoogle //isSignedIn ??\n      ,\n      onFailure: this.responseGoogle //handle later\n      ,\n      cookiePolicy: \"single_host_origin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 13\n      }\n    })));\n  }\n\n}\n\nexport default withStyles(useStyles)(GoogleLog);","map":{"version":3,"sources":["/home/anwesha/Desktop/screencast/components/GoogleLog.js"],"names":["React","GoogleLogin","axios","Head","Button","withStyles","SocialMediaIconsReact","Router","AnsAlert","data","useStyles","theme","root","margin","spacing","GoogleLog","Component","constructor","response","console","log","post","api","token","tokenObj","access_token","then","res","quiz_finished","push","undefined","shallow","localStorage","setItem","profileObj","email","name","imageUrl","setState","access","userDetails","isUserLoggedIn","getItem","Date","now","reload","state","componentDidMount","render","classes","props","renderProps","backgroundColor","padding","onClick","responseGoogle"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport axios from \"axios\";\nimport Head from \"next/head\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { SocialMediaIconsReact } from 'social-media-icons-react';\nimport Router from \"next/router\";\nimport AnsAlert from \"../components/AnsAlert\"\nimport data from '../env.json';\n\n\nconst useStyles = (theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(0),\n    },\n  },\n});\n\nclass GoogleLog extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userDetails: {},\n      isUserLoggedIn: false,\n      access: \"\"\n    };\n    //this.refresh=this.refresh.bind(this);\n  }\n\n  componentDidMount() {\n    \n    if(localStorage.getItem(\"email\"))\n    {\n      this.setState({isUserLoggedIn:true})\n      console.log('mounted')\n      //if((localStorage.getItem('start') < Date.now())) Router.push(\"/game\");\n           \n      \n    }    \n  \n    \n    \n    /*if (localStorage.getItem(\"email\") && ((localStorage.getItem('start') <= Date.now()))) {\n      //this.refresh(localStorage.getItem('token'),localStorage.getItem('ref_token'))\n      console.log(\"email yes timer yes\")\n      //Router.push(\"/game\");\n    }\n    else\n    {\n      console.log(\"timer no\");\n      //Router.push('/');  \n    }*/\n    \n    \n    \n  }\n\n\n  /*refresh=(a,r)=>{\n    console.log(r)\n    localStorage.setItem(\"token\",a);\n    console.log(localStorage.getItem(\"token\"));\n     const t=setInterval(()=>{\n      \n      axios.post(\"https://https://screencast2020.herokuapp.com/api/refresh\",{\n        refresh:r\n      }).then((re)=>{\n        \n        console.log(re);\n        localStorage.setItem(\"token\",re.data.access);\n        this.setState({access:re.data.access})\n        console.log(localStorage.getItem(\"token\"));\n    \n      })\n    },50000)\n    localStorage.setItem(\"interval_id\",t);\n    \n  }*/\n  responseGoogle = (response) => {\n      console.log(response);\n      \n    //localStorage.setItem('token', response.tokenObj.access_token)\n    axios\n      .post(data.api+\"/api/googlelogin\", {\n        token: response.tokenObj.access_token\n\n      })\n      .then((res) => {\n        console.log(res);\n        if(res.data.quiz_finished)\n        {\n          console.log('yes')\n          Router.push('/finale',undefined,{shallow:true})\n          console.log(\"yesyes\")\n        } \n        console.log(\"jajajaj\")\n        localStorage.setItem('token', res.data.access_token)\n        //localStorage.setItem('ref_token', res.data.refresh_token)\n        localStorage.setItem(\"email\", response.profileObj.email);\n        localStorage.setItem(\"name\", response.profileObj.name);\n        localStorage.setItem(\"image\", response.profileObj.imageUrl);\n        \n        this.setState({ access: res.data.access_token,userDetails: response.profileObj, isUserLoggedIn: true }, ()=>{\n        \n          if((localStorage.getItem('start') <= Date.now())) \n            Router.push(\"/game\");\n          else\n            Router.reload();\n           \n\n        })\n        \n        //this.refresh(res.data.access_token,res.data.refresh_token);\n        /* if ((localStorage.getItem('start') <= Date.now()))\n          Router.push(\"/game\");*/\n      });\n\n };\n\n\n  render() {\n    console.log(\"render of google\")\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <div>\n          <Head>\n\n          </Head>\n        </div>\n        <div>\n          {!this.state.isUserLoggedIn && (\n            <GoogleLogin\n              clientId=\"1091948986515-evn13uscvig9k6olefvrkdk3q374iumi.apps.googleusercontent.com\"\n              render={(renderProps) => (\n                <div className={classes.root}  >\n\n                  <Button\n                    style={{ backgroundColor: \"rgba(0,0,0,0)\", padding: \"0\" }}\n                    variant=\"contained\"\n                    color=\"secondary\"\n                    className=\"button\"\n                    onClick={renderProps.onClick}\n\n                  >\n                    <SocialMediaIconsReact borderColor=\"rgba(0,0,0,0.25)\" borderWidth=\"4\" borderStyle=\"inset\" icon=\"googleplus\" iconColor=\"rgba(255,255,255,1)\" backgroundColor=\"rgba(223,48,28,1)\" iconSize=\"7\" roundness=\"29%\" size=\"53\" />\n                  </Button>\n                </div>\n              )}\n              onSuccess={this.responseGoogle} //isSignedIn ??\n              onFailure={this.responseGoogle} //handle later\n\n              cookiePolicy={\"single_host_origin\"}\n            />\n          )}\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default withStyles(useStyles)(GoogleLog);\n"]},"metadata":{},"sourceType":"module"}