{"ast":null,"code":"var _jsxFileName = \"/home/rishav/Screencast/components/GoogleLog.js\";\nvar __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport axios from \"axios\";\nimport Head from \"next/head\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { SocialMediaIconsReact } from 'social-media-icons-react';\nimport Router from \"next/router\";\n\nconst useStyles = theme => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(0)\n    }\n  }\n});\n\nclass GoogleLog extends React.Component {\n  constructor() {\n    super();\n\n    _defineProperty(this, \"responseGoogle\", response => {\n      localStorage.setItem('token', response.tokenObj.access_token);\n      this.setState({\n        userDetails: response.profileObj,\n        isUserLoggedIn: true,\n        access: response.tokenObj.access_token\n      });\n      axios.post(\"https://screencast2020.herokuapp.com/api/googlelogin\", {\n        token: response.tokenObj.access_token\n      }).then(res => {\n        console.log(res);\n        localStorage.setItem('token', res.data.access_token);\n        localStorage.setItem('ref_token', res.data.refresh_token);\n        this.setState({\n          access: res.data.access_token\n        }); //this.refresh(res.data.access_token,res.data.refresh_token);\n\n        localStorage.setItem(\"email\", response.profileObj.email);\n        localStorage.setItem(\"name\", response.profileObj.name);\n        localStorage.setItem(\"image\", response.profileObj.imageUrl);\n        if (localStorage.getItem('start') <= Date.now()) Router.push(\"/game\");\n      });\n    });\n\n    this.state = {\n      userDetails: {},\n      isUserLoggedIn: false,\n      access: \"\"\n    }; //this.refresh=this.refresh.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(Date.now());\n    console.log(localStorage.getItem('start'));\n\n    if (localStorage.getItem(\"email\") && localStorage.getItem('start') <= Date.now()) {\n      //this.refresh(localStorage.getItem('token'),localStorage.getItem('ref_token'))\n      Router.push(\"/game\");\n    }\n  }\n  /*refresh=(a,r)=>{\n    console.log(r)\n    localStorage.setItem(\"token\",a);\n    console.log(localStorage.getItem(\"token\"));\n     const t=setInterval(()=>{\n      \n      axios.post(\"https://https://screencast2020.herokuapp.com/api/refresh\",{\n        refresh:r\n      }).then((re)=>{\n        \n        console.log(re);\n        localStorage.setItem(\"token\",re.data.access);\n        this.setState({access:re.data.access})\n        console.log(localStorage.getItem(\"token\"));\n    \n      })\n    },50000)\n    localStorage.setItem(\"interval_id\",t);\n    \n    }*/\n\n\n  render() {\n    const {\n      classes\n    } = this.props;\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }\n    }, __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }, __jsx(Head, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }\n    })), __jsx(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, !this.state.isUserLoggedIn && __jsx(GoogleLogin, {\n      clientId: \"1091948986515-evn13uscvig9k6olefvrkdk3q374iumi.apps.googleusercontent.com\",\n      render: renderProps => __jsx(\"div\", {\n        className: classes.root,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 19\n        }\n      }, __jsx(Button, {\n        style: {\n          backgroundColor: \"rgba(0,0,0,0)\"\n        },\n        variant: \"contained\",\n        color: \"secondary\",\n        className: \"button\",\n        onClick: renderProps.onClick,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, __jsx(SocialMediaIconsReact, {\n        borderColor: \"rgba(0,0,0,0.25)\",\n        borderWidth: \"3\",\n        borderStyle: \"inset\",\n        icon: \"googleplus\",\n        iconColor: \"rgba(255,255,255,1)\",\n        backgroundColor: \"rgba(223,48,28,1)\",\n        iconSize: \"5\",\n        roundness: \"29%\",\n        size: \"45\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 23\n        }\n      }))),\n      onSuccess: this.responseGoogle //isSignedIn ??\n      ,\n      onFailure: this.responseGoogle //handle later\n      ,\n      cookiePolicy: \"single_host_origin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 15\n      }\n    })));\n  }\n\n}\n\nexport default withStyles(useStyles)(GoogleLog);","map":{"version":3,"sources":["/home/rishav/Screencast/components/GoogleLog.js"],"names":["React","GoogleLogin","axios","Head","Button","withStyles","SocialMediaIconsReact","Router","useStyles","theme","root","margin","spacing","GoogleLog","Component","constructor","response","localStorage","setItem","tokenObj","access_token","setState","userDetails","profileObj","isUserLoggedIn","access","post","token","then","res","console","log","data","refresh_token","email","name","imageUrl","getItem","Date","now","push","state","componentDidMount","render","classes","props","renderProps","backgroundColor","onClick","responseGoogle"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport axios from \"axios\";\nimport Head from \"next/head\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport {SocialMediaIconsReact} from 'social-media-icons-react';\nimport Router from \"next/router\";\n\nconst useStyles = (theme) => ({\n  root: {\n    \"& > *\": {\n      margin: theme.spacing(0),\n    },\n  },\n});\n\nclass GoogleLog extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      userDetails: {},\n      isUserLoggedIn: false,\n      access:\"\"\n    };\n    //this.refresh=this.refresh.bind(this);\n  }\n  componentDidMount() {\n    console.log(Date.now());\n    console.log(localStorage.getItem('start'));\n    if (localStorage.getItem(\"email\") && ((localStorage.getItem('start')<=Date.now()))) \n    {\n      //this.refresh(localStorage.getItem('token'),localStorage.getItem('ref_token'))\n      \n     \n      Router.push(\"/game\");\n    }\n  }\n  \n  \n  /*refresh=(a,r)=>{\n    console.log(r)\n    localStorage.setItem(\"token\",a);\n    console.log(localStorage.getItem(\"token\"));\n     const t=setInterval(()=>{\n      \n      axios.post(\"https://https://screencast2020.herokuapp.com/api/refresh\",{\n        refresh:r\n      }).then((re)=>{\n        \n        console.log(re);\n        localStorage.setItem(\"token\",re.data.access);\n        this.setState({access:re.data.access})\n        console.log(localStorage.getItem(\"token\"));\n    \n      })\n    },50000)\n    localStorage.setItem(\"interval_id\",t);\n    \n\n\n  }*/\n  responseGoogle = (response) => {\n   \n    \n    localStorage.setItem('token',response.tokenObj.access_token)\n    \n    this.setState({ userDetails: response.profileObj, isUserLoggedIn: true,access:response.tokenObj.access_token });\n    axios\n      .post(\"https://screencast2020.herokuapp.com/api/googlelogin\", {\n        token: response.tokenObj.access_token\n       \n      })\n      .then((res) => {\n        \n        console.log((res));\n        localStorage.setItem('token',res.data.access_token)\n        localStorage.setItem('ref_token',res.data.refresh_token)\n        this.setState({access: res.data.access_token})\n        //this.refresh(res.data.access_token,res.data.refresh_token);\n        \n      \n        localStorage.setItem(\"email\", response.profileObj.email);\n        localStorage.setItem(\"name\", response.profileObj.name);\n        localStorage.setItem(\"image\", response.profileObj.imageUrl);\n\n        if((localStorage.getItem('start')<=Date.now()))\n        Router.push(\"/game\");\n        \n      });\n      \n    \n    \n    \n  };\n  \n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <div>\n          <Head>\n            \n          </Head>\n        </div>\n          <div className=\"App\">\n            {!this.state.isUserLoggedIn && (\n              <GoogleLogin\n                clientId=\"1091948986515-evn13uscvig9k6olefvrkdk3q374iumi.apps.googleusercontent.com\"\n                render={(renderProps) => (\n                  <div className={classes.root}  >\n                    \n                    <Button\n                    style={{backgroundColor:\"rgba(0,0,0,0)\"}}\n                      variant=\"contained\"\n                      color=\"secondary\"\n                      className=\"button\"\n                      onClick={renderProps.onClick}\n                      \n                    >\n                      <SocialMediaIconsReact borderColor=\"rgba(0,0,0,0.25)\" borderWidth=\"3\" borderStyle=\"inset\" icon=\"googleplus\" iconColor=\"rgba(255,255,255,1)\" backgroundColor=\"rgba(223,48,28,1)\" iconSize=\"5\" roundness=\"29%\"  size=\"45\" />\n                    </Button>\n                  </div>\n                )}\n                onSuccess={this.responseGoogle} //isSignedIn ??\n                onFailure={this.responseGoogle} //handle later\n                \n                cookiePolicy={\"single_host_origin\"}\n              />\n            )}\n          </div>\n      </div>\n      \n    );\n  }\n}\n\nexport default withStyles(useStyles)(GoogleLog);"]},"metadata":{},"sourceType":"module"}