{"ast":null,"code":"var _jsxFileName = \"/home/rishav4101/Screencast/components/Timer2.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Router from \"next/router\";\nimport Countdown, { zeroPad } from 'react-countdown';\nexport default function Timer(props) {\n  console.log(props);\n\n  const complete = () => {\n    if (localStorage.getItem('email')) {\n      console.log(\"DONEEEEEE\");\n      Router.push('/');\n    }\n  };\n\n  const Completionist = () => {\n    return __jsx(\"span\", {\n      className: \"sign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      style: {\n        backgroundColor: \"rgba(0,0,0,0)\",\n        color: \"white\",\n        padding: \"0\",\n        margin: \"0 auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }\n    }, __jsx(\"div\", {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"17px\",\n        fontFamily: \"'Cabin Sketch', sans-serif\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 21\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, \"Game is live !\"))));\n  };\n\n  const renderer = ({\n    days,\n    hours,\n    minutes,\n    seconds,\n    completed\n  }) => {\n    if (completed) {\n      return __jsx(Completionist, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return __jsx(\"div\", {\n        style: {\n          backgroundColor: \"rgba(0,0,0,0)\",\n          color: \"white\",\n          padding: \"0\",\n          margin: \"0 auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }\n      }, __jsx(\"div\", {\n        style: {\n          textAlign: \"center\",\n          fontSize: \"17px\",\n          fontFamily: \"'Cabin Sketch', sans-serif\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 33\n        }\n      }, props.message, \"\\xA0\\xA0\", zeroPad(days, 2), \":\", zeroPad(hours), \":\", zeroPad(minutes), \":\", zeroPad(seconds)), __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }\n      }, \"Game is not live yet !\")));\n    }\n  };\n\n  return __jsx(Countdown, {\n    date: props.start,\n    renderer: renderer,\n    onComplete: complete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/home/rishav4101/Screencast/components/Timer2.js"],"names":["React","Router","Countdown","zeroPad","Timer","props","console","log","complete","localStorage","getItem","push","Completionist","backgroundColor","color","padding","margin","textAlign","fontSize","fontFamily","renderer","days","hours","minutes","seconds","completed","message","start"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,SAAP,IAAoBC,OAApB,QAAmC,iBAAnC;AAEA,eAAe,SAASC,KAAT,CAAeC,KAAf,EAAsB;AACjCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;;AACA,QAAMG,QAAQ,GAAC,MACf;AACI,QAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAH,EACA;AACIJ,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACAN,MAAAA,MAAM,CAACU,IAAP,CAAY,GAAZ;AACH;AACJ,GAPD;;AAQA,QAAMC,aAAa,GAAG,MAAM;AACxB,WACI;AAAM,MAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,eAAe,EAAE,eAAnB;AAAoCC,QAAAA,KAAK,EAAE,OAA3C;AAAoDC,QAAAA,OAAO,EAAE,GAA7D;AAAkEC,QAAAA,MAAM,EAAE;AAA1E,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAGQ;AAAK,MAAA,KAAK,EAAE;AAAEC,QAAAA,SAAS,EAAE,QAAb;AAAuBC,QAAAA,QAAQ,EAAE,MAAjC;AAAyCC,QAAAA,UAAU,EAAE;AAArD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,CAHR,CADA,CADJ;AAgBH,GAjBD;;AAmBA,QAAMC,QAAQ,GAAG,CAAC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,OAAf;AAAwBC,IAAAA,OAAxB;AAAiCC,IAAAA;AAAjC,GAAD,KAAkD;AAC/D,QAAIA,SAAJ,EAAe;AACX,aAAO,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH,KAFD,MAEO;AACH,aAEQ;AAAK,QAAA,KAAK,EAAE;AAAEZ,UAAAA,eAAe,EAAE,eAAnB;AAAoCC,UAAAA,KAAK,EAAE,OAA3C;AAAoDC,UAAAA,OAAO,EAAE,GAA7D;AAAkEC,UAAAA,MAAM,EAAE;AAA1E,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEQ;AAAK,QAAA,KAAK,EAAE;AAAEC,UAAAA,SAAS,EAAE,QAAb;AAAuBC,UAAAA,QAAQ,EAAE,MAAjC;AAAyCC,UAAAA,UAAU,EAAE;AAArD,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKd,KAAK,CAACqB,OADX,cACgCvB,OAAO,CAACkB,IAAD,EAAO,CAAP,CADvC,OACmDlB,OAAO,CAACmB,KAAD,CAD1D,OACoEnB,OAAO,CAACoB,OAAD,CAD3E,OACuFpB,OAAO,CAACqB,OAAD,CAD9F,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kCAJJ,CAFR,CAFR;AAgBH;AACJ,GArBD;;AAuBA,SAEI,MAAC,SAAD;AACA,IAAA,IAAI,EAAEnB,KAAK,CAACsB,KADZ;AAGI,IAAA,QAAQ,EAAEP,QAHd;AAII,IAAA,UAAU,EAAEZ,QAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ;AAUH","sourcesContent":["import React from 'react'\nimport Router from \"next/router\";\nimport Countdown, { zeroPad } from 'react-countdown';\n\nexport default function Timer(props) {\n    console.log(props)\n    const complete=()=>\n    {\n        if(localStorage.getItem('email') )\n        {\n            console.log(\"DONEEEEEE\");\n            Router.push('/');\n        } \n    }\n    const Completionist = () => {\n        return (\n            <span className=\"sign\">\n            <div style={{ backgroundColor: \"rgba(0,0,0,0)\", color: \"white\", padding: \"0\", margin: \"0 auto\" }}>\n                \n               \n                    <div style={{ textAlign: \"center\", fontSize: \"17px\", fontFamily: \"'Cabin Sketch', sans-serif\" }}>\n                       \n                        <h1>\n                            Game is live !\n                        </h1>\n                    </div>\n               \n            </div>\n        </span>\n        )\n        \n    }\n    \n    const renderer = ({ days, hours, minutes, seconds, completed }) => {\n        if (completed) {\n            return <Completionist />;\n        } else {\n            return (\n                \n                    <div style={{ backgroundColor: \"rgba(0,0,0,0)\", color: \"white\", padding: \"0\", margin: \"0 auto\" }}>\n                        \n                            <div style={{ textAlign: \"center\", fontSize: \"17px\", fontFamily: \"'Cabin Sketch', sans-serif\", }}>\n                                <h1>\n                                    {props.message}&nbsp;&nbsp;{zeroPad(days, 2)}:{zeroPad(hours)}:{zeroPad(minutes)}:{zeroPad(seconds)}\n                                </h1>\n                                <h1>\n                                    Game is not live yet !\n                                </h1>\n                            </div>\n                       \n                    </div>\n                )\n\n        }\n    };\n\n    return (\n        \n        <Countdown\n        date={props.start}\n           \n            renderer={renderer}\n            onComplete={complete}\n        />\n    )\n\n}"]},"metadata":{},"sourceType":"module"}