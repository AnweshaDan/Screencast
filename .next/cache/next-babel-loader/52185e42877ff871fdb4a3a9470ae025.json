{"ast":null,"code":"var _jsxFileName = \"/home/rishav/Screencast/components/Navbar.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Test from \"./Test\";\nimport logo from './scl.png';\nimport styles from \"./Navbar.module.css\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    backgroundColor: \"#000066\",\n    width: \"100%\",\n    paddin: 0\n  },\n  menuButton: {\n    marginRight: theme.spacing(0)\n  },\n  title: {},\n  ava: {\n    float: \"right\"\n  }\n}));\nexport default function Navbar(props) {\n  const classes = useStyles();\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl); //to display avatar in logged in state\n\n  const {\n    0: isSignedIn,\n    1: setIsSigned\n  } = useState(false);\n  const {\n    0: name,\n    1: setName\n  } = useState(\"\");\n  const {\n    0: image,\n    1: setImage\n  } = useState(\"\");\n  useEffect(() => {\n    if (localStorage.getItem(\"email\")) {\n      setIsSigned(true);\n      setName(localStorage.getItem(\"name\"));\n      setImage(localStorage.getItem(\"image\"));\n    }\n  });\n  return __jsx(\"div\", {\n    className: classes.root,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, __jsx(AppBar, {\n    position: \"static\",\n    className: styles.navv,\n    style: {\n      padding: \"0\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, __jsx(Toolbar, {\n    className: styles.navcontent,\n    style: {\n      padding: \"0\",\n      width: \"100%\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, \"\\xA0\", __jsx(\"img\", {\n    src: logo,\n    alt: \".\",\n    style: {\n      width: \"45px\",\n      borderRadius: \"50px\",\n      boxShadow: \"1px 1px 2px #000\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }), __jsx(Typography, {\n    variant: \"h6\",\n    className: classes.title,\n    style: {\n      fontFamily: \"'Russo One', sans-serif\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, \"\\xA0\\xA0SCREENCAST 2020\"), __jsx(\"div\", {\n    className: classes.ava,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 11\n    }\n  }, isSignedIn ? __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, __jsx(Avatar, {\n    alt: name,\n    src: image,\n    className: styles.ava,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }\n  })) : __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  })), __jsx(IconButton, {\n    edge: \"start\",\n    className: classes.menuButton,\n    color: \"white\",\n    \"aria-label\": \"menu\",\n    style: {\n      padding: \"0\",\n      right: \"0\",\n      position: \"absolute\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 11\n    }\n  }, __jsx(Test, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  })))), __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/rishav/Screencast/components/Navbar.js"],"names":["React","useState","useEffect","makeStyles","Avatar","AppBar","Toolbar","Typography","IconButton","Test","logo","styles","useStyles","theme","root","backgroundColor","width","paddin","menuButton","marginRight","spacing","title","ava","float","Navbar","props","classes","anchorEl","setAnchorEl","open","Boolean","isSignedIn","setIsSigned","name","setName","image","setImage","localStorage","getItem","navv","padding","navcontent","borderRadius","boxShadow","fontFamily","right","position"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport Test from \"./Test\"\nimport logo from './scl.png';\n\nimport styles from \"./Navbar.module.css\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n\n    backgroundColor: \"#000066\",\n    width: \"100%\",\n    paddin: 0\n  },\n  menuButton: {\n    marginRight: theme.spacing(0),\n  },\n  title: {\n\n  },\n  ava: {\n    float: \"right\"\n\n  },\n}));\n\nexport default function Navbar(props) {\n\n  const classes = useStyles();\n\n\n  const [anchorEl, setAnchorEl] = React.useState(null);\n  const open = Boolean(anchorEl);\n  //to display avatar in logged in state\n  const [isSignedIn, setIsSigned] = useState(false);\n  const [name, setName] = useState(\"\");\n  const [image, setImage] = useState(\"\");\n\n  useEffect(() => {\n\n    if (localStorage.getItem(\"email\")) {\n      setIsSigned(true);\n      setName(localStorage.getItem(\"name\"));\n      setImage(localStorage.getItem(\"image\"));\n    }\n  });\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\" className={styles.navv} style={{ padding: \"0\" }}>\n        <Toolbar className={styles.navcontent} style={{ padding: \"0\", width: \"100%\" }}>\n          &nbsp;\n          <img src={logo} alt=\".\" style={{ width: \"45px\", borderRadius: \"50px\", boxShadow: \"1px 1px 2px #000\" }} />\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n            style={{ fontFamily: \"'Russo One', sans-serif\" }}\n          >\n\n            &nbsp;&nbsp;SCREENCAST 2020\n          </Typography>\n\n          <div className={classes.ava}>\n            {isSignedIn ? (\n              <div>\n\n                <Avatar\n                  alt={name}\n                  src={image}\n                  className={styles.ava}\n                />\n\n              </div>\n            ) : (\n                <div>\n\n                </div>\n              )}\n          </div>\n          <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"white\"\n            aria-label=\"menu\"\n            style={{ padding: \"0\", right: \"0\", position: \"absolute\" }}\n          >\n            <Test />\n          </IconButton>\n        </Toolbar>\n\n      </AppBar>\n      <div>\n\n      </div>\n\n\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}