{"ast":null,"code":"var _jsxFileName = \"/home/rishav4101/Screencast/components/Timer2.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Router from \"next/router\";\nimport Countdown, { zeroPad } from 'react-countdown';\nimport { Typography, CardContent, CardHeader, Card } from \"@material-ui/core\";\nexport default function Timer(props) {\n  var _this = this;\n\n  console.log(props);\n\n  var complete = function complete() {\n    if (localStorage.getItem('email')) {\n      console.log(\"DONEEEEEE\");\n      Router.push('/');\n    }\n  };\n\n  var Completionist = function Completionist() {\n    return __jsx(\"span\", {\n      className: \"sign\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 18\n      }\n    }, __jsx(\"div\", {\n      style: {\n        backgroundColor: \"rgba(0,0,0,0)\",\n        color: \"white\",\n        padding: \"0\",\n        margin: \"0 auto\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }\n    }, __jsx(CardHeader, {\n      style: {\n        textAlign: \"center\"\n      },\n      title: \" \",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }\n    }), \" \", __jsx(CardContent, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 26\n      }\n    }, __jsx(Typography, {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"17px\"\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    }, __jsx(\"h1\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }\n    }, \"Game is live!\"), \" \"), \" \"), \" \"), \" \");\n  };\n\n  var renderer = function renderer(_ref) {\n    var days = _ref.days,\n        hours = _ref.hours,\n        minutes = _ref.minutes,\n        seconds = _ref.seconds,\n        completed = _ref.completed;\n\n    if (completed) {\n      return __jsx(Completionist, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return __jsx(\"span\", {\n        className: \"sign\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 22\n        }\n      }, __jsx(Card, {\n        style: {\n          backgroundColor: \"rgba(0,0,0,0)\",\n          color: \"white\",\n          padding: \"0\",\n          margin: \"0 auto\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }\n      }, __jsx(CardHeader, {\n        style: {\n          textAlign: \"center\"\n        },\n        title: \" \",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 17\n        }\n      }), \" \", __jsx(CardContent, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 30\n        }\n      }, __jsx(Typography, {\n        style: {\n          textAlign: \"center\",\n          fontSize: \"17px\"\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 17\n        }\n      }, __jsx(\"h1\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }\n      }, \" \", props.message, \" & nbsp; & nbsp; \", zeroPad(days, 2), \": \", zeroPad(hours), \": \", zeroPad(minutes), \": \", zeroPad(seconds), \" \"), \" \", __jsx(\"h1\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 22\n        }\n      }, \"Game is not live yet!\"), \" \"), \" \"), \" \"), \" \");\n    }\n  };\n\n  return __jsx(Countdown, {\n    date: props.start,\n    renderer: renderer,\n    onComplete: complete,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  });\n}","map":{"version":3,"sources":["/home/rishav4101/Screencast/components/Timer2.js"],"names":["React","Router","Countdown","zeroPad","Typography","CardContent","CardHeader","Card","Timer","props","console","log","complete","localStorage","getItem","push","Completionist","backgroundColor","color","padding","margin","textAlign","fontSize","renderer","days","hours","minutes","seconds","completed","message","start"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Router from \"next/router\";\nimport Countdown, { zeroPad } from 'react-countdown';\nimport {\n    Typography,\n    CardContent,\n    CardHeader,\n    Card\n} from \"@material-ui/core\";\n\nexport default function Timer(props) {\n    console.log(props)\n    const complete = () => {\n        if (localStorage.getItem('email')) {\n            console.log(\"DONEEEEEE\");\n            Router.push('/');\n        }\n    }\n    const Completionist = () => {\n        return ( <\n            span className = \"sign\" >\n            <\n            div style = {\n                { backgroundColor: \"rgba(0,0,0,0)\", color: \"white\", padding: \"0\", margin: \"0 auto\" } } >\n            <\n            CardHeader style = {\n                { textAlign: \"center\" } }\n            title = \" \" >\n\n            <\n            /CardHeader> <\n            CardContent >\n            <\n            Typography style = {\n                { textAlign: \"center\", fontSize: \"17px\" } } >\n\n            <\n            h1 >\n            Game is live!\n            <\n            /h1> <\n            /Typography> <\n            /CardContent> <\n            /div> <\n            /span>\n        )\n\n    }\n\n    const renderer = ({ days, hours, minutes, seconds, completed }) => {\n        if (completed) {\n            return <Completionist / > ;\n        } else {\n            return ( <\n                span className = \"sign\" >\n                <\n                Card style = {\n                    { backgroundColor: \"rgba(0,0,0,0)\", color: \"white\", padding: \"0\", margin: \"0 auto\" } } >\n                <\n                CardHeader style = {\n                    { textAlign: \"center\" } }\n                title = \" \" >\n\n                <\n                /CardHeader> <\n                CardContent >\n                <\n                Typography style = {\n                    { textAlign: \"center\", fontSize: \"17px\" } } >\n                <\n                h1 > { props.message } & nbsp; & nbsp; { zeroPad(days, 2) }: { zeroPad(hours) }: { zeroPad(minutes) }: { zeroPad(seconds) } <\n                /h1> <\n                h1 >\n                Game is not live yet!\n                <\n                /h1> <\n                /Typography> <\n                /CardContent> <\n                /Card> <\n                /span>)\n\n            }\n\n\n\n\n        };\n\n\n\n\n\n\n        return (\n\n            <\n            Countdown date = { props.start }\n\n            renderer = { renderer }\n            onComplete = { complete }\n            />\n        )\n\n    }"]},"metadata":{},"sourceType":"module"}