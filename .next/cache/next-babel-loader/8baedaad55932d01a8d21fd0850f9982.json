{"ast":null,"code":"var _jsxFileName = \"/home/anwesha/Desktop/screencast/components/Timer2.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Countdown, { zeroPad } from 'react-countdown';\nimport { Typography, CardContent, CardHeader, Card } from \"@material-ui/core\";\nexport default function Timer(props) {\n  console.log(props);\n  axios.get(\"https://screencast2020.herokuapp.com/api/status\").then(response => {\n    console.log(\"index mounted\");\n    console.log(new Date(response.data.start_time).getTime()); //milliseconds\n\n    setStart(new Date(response.data.start_time).getTime());\n    setEnd(new Date(response.data.end_time).getTime());\n    setDay(response.data.current_day);\n    localStorage.setItem(\"start\", start);\n    console.log(localStorage.getItem('start'));\n    if (localStorage.getItem('email') && localStorage.getItem('start') <= Date.now()) Router.push('/game');\n  });\n\n  const Completionist = () => {\n    return __jsx(\"span\", {\n      className: \"sign\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, __jsx(Card, {\n      style: {\n        backgroundColor: \"rgba(0,0,0,0)\",\n        color: \"white\",\n        padding: \"0\",\n        margin: \"0 auto\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, __jsx(CardHeader, {\n      style: {\n        textAlign: \"center\"\n      },\n      title: \" \",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }\n    }), __jsx(CardContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }\n    }, __jsx(Typography, {\n      style: {\n        textAlign: \"center\",\n        fontSize: \"17px\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 21\n      }\n    }, __jsx(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, \"Game is live !\")))));\n  };\n\n  const renderer = ({\n    days,\n    hours,\n    minutes,\n    seconds,\n    completed\n  }) => {\n    if (completed) {\n      return __jsx(Completionist, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 20\n        }\n      });\n    } else {\n      return __jsx(\"span\", {\n        className: \"sign\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }\n      }, __jsx(Card, {\n        style: {\n          backgroundColor: \"rgba(0,0,0,0)\",\n          color: \"white\",\n          padding: \"0\",\n          margin: \"0 auto\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }\n      }, __jsx(CardHeader, {\n        style: {\n          textAlign: \"center\"\n        },\n        title: \" \",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }\n      }), __jsx(CardContent, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 25\n        }\n      }, __jsx(Typography, {\n        style: {\n          textAlign: \"center\",\n          fontSize: \"17px\"\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 29\n        }\n      }, __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 33\n        }\n      }, props.message, \"\\xA0\\xA0\", zeroPad(days, 3), \":\", zeroPad(hours), \":\", zeroPad(minutes), \":\", zeroPad(seconds)), __jsx(\"h1\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 33\n        }\n      }, \"Game is not live yet !\")))));\n    }\n  };\n\n  return __jsx(Countdown, {\n    date: props.start,\n    intervalDelay: 1,\n    renderer: renderer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  });\n}","map":{"version":3,"sources":["/home/anwesha/Desktop/screencast/components/Timer2.js"],"names":["React","Countdown","zeroPad","Typography","CardContent","CardHeader","Card","Timer","props","console","log","axios","get","then","response","Date","data","start_time","getTime","setStart","setEnd","end_time","setDay","current_day","localStorage","setItem","start","getItem","now","Router","push","Completionist","backgroundColor","color","padding","margin","textAlign","fontSize","renderer","days","hours","minutes","seconds","completed","message"],"mappings":"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","sourcesContent":["\nimport React from 'react'\n\nimport Countdown, { zeroPad } from 'react-countdown';\nimport {\n    Typography,\n    CardContent,\n    CardHeader,\n    Card\n} from \"@material-ui/core\";\n\nexport default function Timer(props) {\n    console.log(props)\n    axios\n      .get(\"https://screencast2020.herokuapp.com/api/status\")\n      .then((response) => {\n        console.log(\"index mounted\");\n        console.log((new Date(response.data.start_time)).getTime());//milliseconds\n        setStart((new Date(response.data.start_time)).getTime())\n        setEnd((new Date(response.data.end_time)).getTime())\n        setDay(response.data.current_day)\n\n        localStorage.setItem(\"start\", start);\n        console.log(localStorage.getItem('start'));\n\n        if (localStorage.getItem('email') && (localStorage.getItem('start') <= Date.now()))\n          Router.push('/game')\n      });\n    const Completionist = () => {\n        return (\n            <span className=\"sign\">\n            <Card style={{ backgroundColor: \"rgba(0,0,0,0)\", color: \"white\", padding: \"0\", margin: \"0 auto\" }}>\n                <CardHeader\n                    style={{ textAlign: \"center\" }}\n                    title=\" \">\n    \n                </CardHeader>\n                <CardContent>\n                    <Typography style={{ textAlign: \"center\", fontSize: \"17px\" }}>\n                       \n                        <h1>\n                            Game is live !\n                        </h1>\n                    </Typography>\n                </CardContent>\n            </Card>\n        </span>\n        )\n        \n    }\n    \n    const renderer = ({ days, hours, minutes, seconds, completed }) => {\n        if (completed) {\n            return <Completionist />;\n        } else {\n            return (\n                <span className=\"sign\">\n                    <Card style={{ backgroundColor: \"rgba(0,0,0,0)\", color: \"white\", padding: \"0\", margin: \"0 auto\" }}>\n                        <CardHeader\n                            style={{ textAlign: \"center\" }}\n                            title=\" \">\n\n                        </CardHeader>\n                        <CardContent>\n                            <Typography style={{ textAlign: \"center\", fontSize: \"17px\" }}>\n                                <h1>\n                                    {props.message}&nbsp;&nbsp;{zeroPad(days, 3)}:{zeroPad(hours)}:{zeroPad(minutes)}:{zeroPad(seconds)}\n                                </h1>\n                                <h1>\n                                    Game is not live yet !\n                                </h1>\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </span>)\n\n        }\n      \n\n\n\n    };\n\n  \n    \n\n\n\n    return (\n        \n        <Countdown\n        date={props.start}\n            intervalDelay={1}\n            renderer={renderer}\n            \n        />\n    )\n\n}"]},"metadata":{},"sourceType":"module"}