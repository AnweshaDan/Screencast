{"version":3,"file":"static/webpack/static/development/pages/leaderboard.js.0474c9687e69766f9f4a.hot-update.js","sources":["webpack:///./components/Leadertable.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\n\nimport axios from \"axios\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#000033\",\n    color: \"white\",\n    border: \"none\",\n  },\n  body: {\n    fontSize: 14,\n    color: \"white\",\n    border: \"none\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: \"rgba(255,255,255,0.4)\",\n    },\n    \"&:nth-of-type(even)\": {\n      backgroundColor: \"rgba(0,0,0,0.5)\",\n      color: \"white\",\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles({\n  table: {\n    marginTop: \"10px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    display: \"auto\",\n    maxWidth: \"700px\",\n    position: \"relative\",\n  },\n});\n\nexport default function Leadertable() {\n  const [RankList, setRankList] = useState([]);\n  const classes = useStyles();\n\n  useEffect(() => {\n    axios\n      .get(\"https://screencast20.azurewebsites.net/api/leaderboard\", {\n        headers: {\n          Authorization: \"Bearer \" + localStorage.getItem(\"token\"),\n        },\n      })\n      .then((response) => {\n        setRankList(response.data);\n        console.log(response.data);\n        console.log(RankList);\n      });\n  }, []);\n\n  return (\n    <div>\n      <div className=\"rtable\">\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Rank</StyledTableCell>\n              <StyledTableCell align=\"left\">Player</StyledTableCell>\n              <StyledTableCell align=\"left\">Points</StyledTableCell>\n            </TableRow>\n          </TableHead>\n\n          {RankList.length ? (\n            <TableBody style={{ fontFamily: \"'Barlow', sans-serif\" }}>\n              {RankList.map((row, index) => (\n                <StyledTableRow\n                  key={index}\n                  style={{ fontFamily: \"'Barlow', sans-serif\" }}\n                >\n                  <StyledTableCell component=\"th\" scope=\"row\">\n                    {row.rank}\n                  </StyledTableCell>\n                  <StyledTableCell align=\"left\">{row.name}</StyledTableCell>\n                  <StyledTableCell align=\"left\">{row.score}</StyledTableCell>\n                </StyledTableRow>\n              ))}\n            </TableBody>\n          ) : (\n            <div>LOADING......</div>\n          )}\n        </Table>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAAA;AAaA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAJA;AADA;AAAA;AAYA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAWA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAEA;AACA;AADA;AADA;AAMA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AATA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;A","sourceRoot":""}