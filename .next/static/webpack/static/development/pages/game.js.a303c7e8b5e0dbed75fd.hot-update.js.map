{"version":3,"file":"static/webpack/static/development/pages/game.js.a303c7e8b5e0dbed75fd.hot-update.js","sources":["webpack:///./pages/game.js"],"sourcesContent":["import axios from \"axios\";\nimport React from \"react\";\nimport Navbar from \"../components/Navbar\";\nimport Footer from \"../components/Footer\";\nimport Question from \"../components/Question\";\nimport Hint from \"../components/Hint\";\nimport Submit from \"../components/Submit\";\nimport Particles from \"react-particles-js\";\nimport Answer from \"../components/Answer\";\nimport Router from \"next/router\";\n\nclass game extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      answer: \"\",\n      questions: \"\",\n      qsNo: 1,\n      correct: 0,\n      alert_title: \"\",\n      alert_text: \"hola\",\n      open: false,\n    };\n\n    this.submit = this.submit.bind(this);\n    this.change = this.change.bind(this);\n    this.checkAns = this.checkAns.bind(this);\n    this.getQuestions = this.getQuestions.bind(this);\n  }\n\n  componentDidMount() {\n    //at the beginning sets the first qs\n    console.log(this.state.qsNo);\n    this.getQuestions();\n  }\n\n  getQuestions() {\n    console.log(\"YO\"); //get questions from api and updates state\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/posts/\" + this.state.qsNo)\n      .then((response) => {\n        let r = response.data.title;\n        console.log(r);\n        this.setState((prevState) => {\n          return { ...prevState, questions: r };\n        });\n      });\n  }\n\n  submit = () => {\n    //send final answer for checking\n\n    console.log(this.state.answer);\n    this.checkAns(this.state.answer);\n  };\n\n  change = (event) => {\n    //keep updating answer\n    let e = event.target.value;\n    this.setState((prevState) => {\n      return { ...prevState, answer: e };\n    });\n  };\n\n  checkAns(\n    answer //check answer from api and send for correct alert\n  ) {\n    console.log(answer);\n    console.log(this.state.qsNo);\n    axios\n      .get(\"https://jsonplaceholder.typicode.com/posts/\" + this.state.qsNo)\n      .then((response) => {\n        let r = response.data.id;\n        console.log(r);\n\n        if (this.state.qsNo < 5) {\n          if (answer == r) {\n            this.setState((prevState) => {\n              return { ...prevState, qsNo: prevState.qsNo + 1, correct: 1 };\n            });\n            this.getQuestions();\n          } else {\n            this.setState((prevState) => {\n              return { ...prevState, correct: 0 };\n            });\n            this.getQuestions();\n          }\n        } else {\n          Router.push(\"/\");\n        }\n        console.log(this.state.correct);\n      });\n  }\n\n  render() {\n    return (\n      <div style={{ marginRight: \"auto\", marginLeft: \"auto\" }}>\n        <Particles\n          params={{\n            particles: {\n              number: {\n                value: 200,\n                density: {\n                  enable: true,\n                  value_area: 900,\n                },\n              },\n              color: {\n                value: [\"#cc0000\"],\n              },\n              line_linked: {\n                color: \"#aa0044\",\n                opacity: 1,\n              },\n            },\n          }}\n          style={{\n            width: \"100%\",\n            height: \"100%\",\n            top: 0,\n            left: 0,\n            position: \"fixed\",\n            index: \"-10\",\n          }}\n        />\n\n        <Navbar />\n        <Question qs={this.state.questions} />\n        <Answer change={this.change} />\n        <Submit submit={this.submit} correct={this.correct} />\n\n        <div>\n          <Hint />\n          <style jsx>{`\n            div {\n              margin: 0 auto;\n              text-align: center;\n              margin: 5px;\n            }\n          `}</style>\n        </div>\n        <div>\n          <Footer />\n        </div>\n      </div>\n    );\n  }\n}\nexport default game;\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAsCA;AAEA;AACA;AAAA;AACA;AACA;AA3CA;AA6CA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAUA;AACA;AACA;AACA;AAfA;AAgBA;AACA;;;AACA;AACA;AACA;AACA;AACA;;;AAEA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;;;AAkBA;AACA;AAAA;AACA;AAAA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;;;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAOA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAXA;AADA;AAkBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AAnBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA6BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAUA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;AAvIA;AACA;AAwIA;;;;A","sourceRoot":""}