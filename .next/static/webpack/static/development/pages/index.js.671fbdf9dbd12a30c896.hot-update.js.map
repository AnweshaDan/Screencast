{"version":3,"file":"static/webpack/static/development/pages/index.js.671fbdf9dbd12a30c896.hot-update.js","sources":["webpack:///./components/GoogleLog.js"],"sourcesContent":["import React from \"react\";\nimport GoogleLogin from \"react-google-login\";\nimport axios from \"axios\";\nimport Head from \"next/head\";\nimport Button from \"@material-ui/core/Button\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport { SocialMediaIconsReact } from 'social-media-icons-react';\nimport Router from \"next/router\";\nimport AnsAlert from \"../components/AnsAlert\"\nimport data from '../env.json';\n\n\nconst useStyles = (theme) => ({\n    root: {\n        \"& > *\": {\n            margin: theme.spacing(0),\n        },\n    },\n});\n\nclass GoogleLog extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            userDetails: {},\n            isUserLoggedIn: false,\n            access: \"\",\n            result: false\n        };\n        //this.refresh=this.refresh.bind(this);\n    }\n\n    componentDidMount() {\n        console.log('Google mounted')\n            //this.responseGoogle(this.state.result)\n        if (localStorage.getItem('day') == 3 && localStorage.getItem('end') < Date.now()) Router.push('/game_finale')\n        else {\n            if (localStorage.getItem(\"email\")) {\n                //this.responseGoogle(this.state.result)\n                this.setState({ isUserLoggedIn: true }, () => {\n\n\n                })\n\n\n\n\n\n            }\n\n        }\n\n\n\n\n        /*if (localStorage.getItem(\"email\") && ((localStorage.getItem('start') <= Date.now()))) {\n          //this.refresh(localStorage.getItem('token'),localStorage.getItem('ref_token'))\n          console.log(\"email yes timer yes\")\n          //Router.push(\"/game\");\n        }\n        else\n        {\n          console.log(\"timer no\");\n          //Router.push('/');  \n        }*/\n\n\n\n    }\n\n\n    /*refresh=(a,r)=>{\n      console.log(r)\n      localStorage.setItem(\"token\",a);\n      console.log(localStorage.getItem(\"token\"));\n       const t=setInterval(()=>{\n        \n        axios.post(\"https://https://screencast2020.herokuapp.com/api/refresh\",{\n          refresh:r\n        }).then((re)=>{\n          \n          console.log(re);\n          localStorage.setItem(\"token\",re.data.access);\n          this.setState({access:re.data.access})\n          console.log(localStorage.getItem(\"token\"));\n      \n        })\n      },50000)\n      localStorage.setItem(\"interval_id\",t);\n      \n    }*/\n    responseGoogle = (response) => {\n        console.log(response);\n\n        //localStorage.setItem('token', response.tokenObj.access_token)\n        axios\n            .post(data.api + \"/api/googlelogin\", {\n                token: response.tokenObj.access_token\n\n            })\n            .then((res) => {\n                console.log(res);\n\n                console.log(\"jajajaj\")\n                localStorage.setItem('token', res.data.access_token)\n                    //localStorage.setItem('ref_token', res.data.refresh_token)\n                localStorage.setItem(\"email\", response.profileObj.email);\n                localStorage.setItem(\"name\", response.profileObj.name);\n                localStorage.setItem(\"image\", response.profileObj.imageUrl);\n\n                this.setState({ result: res.data.quiz_finished, access: res.data.access_token, userDetails: response.profileObj, isUserLoggedIn: true }, () => {\n                    console.log(\"mountain\" + this.state.result)\n                    if ((localStorage.getItem('start') <= Date.now())) {\n                        if (!(res.data.quiz_finished) && localStorage.getItem('end') > Date.now()) Router.push('/game')\n                        else if (res.data.quiz_finished && localStorage.getItem('end') > Date.now()) {\n                            console.log(\"seaaa\")\n                            Router.push('/finale')\n                        } else {}\n                    } else\n                        Router.reload();\n\n\n                })\n\n                //this.refresh(res.data.access_token,res.data.refresh_token);\n                /* if ((localStorage.getItem('start') <= Date.now()))\n                  Router.push(\"/game\");*/\n            });\n\n    };\n\n\n    render() {\n        console.log(\"render of google\")\n        const { classes } = this.props;\n\n        return ( <\n            div >\n            <\n            div > {!this.state.isUserLoggedIn && ( <\n                    GoogleLogin clientId = \"1091948986515-evn13uscvig9k6olefvrkdk3q374iumi.apps.googleusercontent.com\"\n                    render = {\n                        (renderProps) => ( <\n                            div className = { classes.root } >\n\n\n                            <\n                            SocialMediaIconsReact onClick = { renderProps.onClick }\n                            borderColor = \"rgba(0,0,0,0.25)\"\n                            borderWidth = \"4\"\n                            borderStyle = \"inset\"\n                            icon = \"googleplus\"\n                            iconColor = \"rgba(255,255,255,1)\"\n                            backgroundColor = \"rgba(223,48,28,1)\"\n                            iconSize = \"7\"\n                            roundness = \"29%\"\n                            size = \"53\" / >\n\n                            <\n                            /div>\n                        )\n                    }\n                    onSuccess = { this.responseGoogle } //isSignedIn ??\n                    onFailure = { this.responseGoogle } //handle later\n\n                    cookiePolicy = { \"single_host_origin\" }\n                    />\n                )\n            } <\n            /div> <\n            /div>\n\n        );\n    }\n}\n\nexport default withStyles(useStyles)(GoogleLog);"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AACA;AACA;AACA;AADA;AADA;AADA;AAAA;AACA;AAOA;;;;;AACA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAuEA;AACA;AAEA;AAEA;AADA;AAKA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAEA;AACA;AACA;AACA;AAIA;AACA;AAEA;;;AAEA;AAEA;AACA;AA3GA;AACA;AACA;AACA;AACA;AAJA;AACA;AAHA;AASA;AACA;;;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AASA;AAEA;AAKA;;;;;;;;;;AAaA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AA6DA;AAAA;AACA;AAAA;AADA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAVA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAoBA;AAvBA;AAwBA;AAxBA;AA0BA;AA1BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCA;;;;AAzJA;AACA;AA2JA;;;;A","sourceRoot":""}