{"version":3,"file":"static/webpack/static/development/pages/leaderboard.js.b68e3e1b757d8134e665.hot-update.js","sources":["webpack:///./components/Leadertable.js"],"sourcesContent":["import React, {useState, useEffect} from 'react';\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport styles from './Leadertable.module.css'\nimport axios from 'axios'\n\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: \"#000033\",\n    color: \"white\",\n    border: \"none\",\n  },\n  body: {\n    fontSize: 14,\n    color: \"white\",\n    border: \"none\",\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    '&:nth-of-type(odd)': {\n      backgroundColor: \"rgba(255,255,255,0.4)\",\n    },\n    '&:nth-of-type(even)': {\n      backgroundColor: \"rgba(0,0,0,0.5)\",\n      color: \"white\",\n    },\n  },\n}))(TableRow);\n\n\n\n\n\n\nconst useStyles = makeStyles({\n  table: {\n    marginTop: \"10px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n    display: \"auto\",\n    maxWidth: '700px',\n    position: \"relative\"\n  },\n});\n\n\n\n\nexport default function CustomizedTables() {\n\n  const [RankList, setRankList]=useState([])\n  const classes = useStyles();\n \n\n  useEffect(()=> {  \n    axios.get('https://jsonplaceholder.typicode.com/users').then(response => {  \n\n      \n      setRankList( response.data  \n      );\n      console.log(RankList); \n\n    });  \n     \n     \n    \n  },[]);  \n\n  return (\n    <div>\n\n      <div className=\"rtable\">\n        <Table className={classes.table} aria-label=\"customized table\">\n          <TableHead>\n            <TableRow>\n              <StyledTableCell>Rank</StyledTableCell>\n              <StyledTableCell align=\"left\">Player</StyledTableCell>\n              <StyledTableCell align=\"left\">Points</StyledTableCell>\n\n            </TableRow>\n          </TableHead>\n          \n            { RankList.length ?            \n              <TableBody>\n              {RankList.map((row,index) => (\n              <StyledTableRow key={index}>\n                <StyledTableCell component=\"th\" scope=\"row\">\n                  {row.id}\n                </StyledTableCell>\n                <StyledTableCell align=\"left\">{row.username}</StyledTableCell>\n                <StyledTableCell align=\"left\">{row.email}</StyledTableCell>\n\n\n              </StyledTableRow>\n              ))}\n              </TableBody>\n            :\n            \n          \n                <div>LOADING......</div>\n              \n            }\n            \n            \n        </Table>\n      </div>\n\n\n    </div>\n  );\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AAAA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAHA;AANA;AAAA;AAaA;AAAA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAJA;AADA;AAAA;AAiBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AADA;AAceA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAWA;;;;A","sourceRoot":""}