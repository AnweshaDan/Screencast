{"version":3,"file":"static/webpack/static/development/pages/game.js.1193798309729d5e656b.hot-update.js","sources":["webpack:///./pages/game.js"],"sourcesContent":["import axios from'axios'\nimport React from 'react'\nimport Navbar from '../components/Navbar'\nimport Footer from '../components/Footer'\nimport Question from '../components/Question'\nimport Hint from '../components/Hint'\nimport Submit from '../components/Submit'\nimport Particles from 'react-particles-js';\nimport Answer from '../components/Answer';\nimport Router from 'next/router';\n\n\n\n\nclass game extends React.Component{\n    constructor(props)\n    {\n        super(props);\n        this.state={\n            answer:\"\",\n            questions:\"\",\n            qsNo:1,\n            \n            \n            \n            isLoggedIn:false,\n            hint:\"\"\n            \n        }\n\n        this.submit=this.submit.bind(this);\n        this.submit2=this.submit2.bind(this);\n        this.change=this.change.bind(this);\n        this.checkAns=this.checkAns.bind(this);\n        this.getQuestions=this.getQuestions.bind(this);\n        \n    }\n    \n\n    componentDidMount()//at the beginning sets the qs\n    {//after getting appropiate data from backend about that email in local storage\n        console.log(this.state.qsNo);\n        console.log(localStorage.getItem('email'));//email available here\n\n        /*   axios.get('https://jsonplaceholder.typicode.com/users/email?=Nathan@yesenia.net').then((response)=>\n        {\n            console.log(\"yesssss\"+this.state.qsNo+response.json);\n            this.setState(prevState=>{\n                return{ ...prevState, questions:response.data.id}\n              });\n        }\n        )*/\n\n        //next qs/completed/error\n\n        this.getQuestions();\n        \n        \n    }\n\n    getQuestions(){\n        console.log(this.state.qsNo);\n        console.log(localStorage.getItem('token'));//get questions from api and updates state\n        \n        \n        axios.get('https://screencast20.azurewebsites.net/api/question',{\n            headers:{\n                'Authorization': 'Bearer '+localStorage.getItem('token')}\n        }\n        ).then((response)=>\n        {\n          \n          console.log(response);\n          this.setState(prevState=>{\n            return{ ...prevState, questions:response.data.question,hint:response.data.hint}\n          });\n       \n          \n          \n\n    });\n    console.log(localStorage.getItem('token'));\n    }\n\n    submit=(event)=>{//send final answer for checking\n        if(event.key===\"Enter\")\n        {\n            console.log(this.state.answer);\n            console.log(\"JOJOJOJOJOJ\");\n        this.checkAns(this.state.answer);\n        }\n        \n    }\n   submit2=()=>{//send final answer for checking\n        \n        \n            console.log(this.state.answer);\n        \n        this.checkAns(this.state.answer);\n        \n        \n    }\n\n\n    change=(event)=>{//keep updating answer\n        let e= event.target.value; \n        this.setState(prevState=> {\n        return { ...prevState, answer:e }\n        \n    });\n    \n    }\n\n    \n     \n   \n\n    checkAns(answer)//check answer from api and send for correct alert\n    {\n        \n        console.log(answer);\n        console.log(this.state.qsNo)\n        axios.get('https://screencast20.azurewebsites.net/api/checkanswer').then((response)=>\n        {\n             let r=response.data.id;\n             console.log(r);\n        \n        if(this.state.qsNo < 5)\n        {\n            if(answer==r)\n            {\n                \n                this.setState(prevState=>{\n                    return{ ...prevState, qsNo:prevState.qsNo+1}\n                  });\n                  alert(\"Correct\");//where does the effing control go after this?\n                  console.log(\"SANTA\");\n                  this.getQuestions();\n                  \n            }\n            else{\n               \n                  alert(\"Wrong\");\n                this.getQuestions();\n                \n            }\n                \n        }\n        else{\n            alert(\"Completed yay\");\n            Router.push('/finale');\n        }\n        \n    });\n\n    }\n    \n    render()\n    {\n\n    \n    return (\n        <div\n            style={{ marginRight: \"auto\", marginLeft: \"auto\", textAlign: \"center\" }}\n            >\n            <Particles\n\n                params={{\n                    particles: {\n                        number: {\n                            value: 200,\n                            density: {\n                                enable: true,\n                                value_area: 900,\n                            }\n\n                        },\n                        color: {\n                            value: ['#cc0000']\n                        },\n                        line_linked: {\n                            color: '#aa0044',\n                            opacity: 1\n                        }\n                    },\n                }}\n                style={{\n                    width: \"100%\",\n                    height: \"100%\",\n                    top: 0,\n                    left: 0,\n                    position: \"fixed\",\n                    index: \"-10\"\n\n\n                }}\n            />\n            \n\n            <Navbar />\n            <Question qs={this.state.questions} />\n            \n            <Answer change={this.change} submit={this.submit} submit2={this.submit2} />\n            \n            \n          \n            \n            \n            \n            <div>\n\n            <Hint hint={this.state.hint}/>\n                <style jsx>{`\n    div{\n        text-align:center;\n        margin:5px;\n    }\n    `}</style>\n\n            </div>\n            <div>\n                <Footer/>\n            </div>\n\n\n\n        </div >\n    );\n}\n}\nexport default game;"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;;;;;AACA;AACA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAoEA;AACA;AAEA;AACA;AACA;AAAA;AACA;AAEA;AACA;AA7EA;AA6EA;AAGA;AACA;AACA;AAGA;AACA;AAtFA;AAwFA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAEA;AAEA;AACA;AA9FA;AACA;AACA;AACA;AAIA;AACA;AARA;AAYA;AACA;AACA;AACA;AACA;AAlBA;AAoBA;AACA;;;AAEA;AACA;AAAA;AACA;AACA;AACA;AACA;;;;;;;;AASA;AACA;AACA;AAGA;;;AAEA;AAAA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AADA;AADA;AAOA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAKA;AACA;AACA;;;AAmCA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAGA;AACA;AAAA;AAAA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AAGA;AACA;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AAEA;AAEA;;;AAGA;AAGA;AAEA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AAQA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAZA;AADA;AAmBA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAkCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAWA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;AAtNA;AACA;AAuNA;;;;A","sourceRoot":""}