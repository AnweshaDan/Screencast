{"version":3,"file":"static/webpack/static/development/pages/index.js.0968d87e6a293f6e1fce.hot-update.js","sources":["webpack:///./components/Timer2.js"],"sourcesContent":["\nimport React from 'react'\n\nimport Countdown, { zeroPad } from 'react-countdown';\nimport {\n    Typography,\n    CardContent,\n    CardHeader,\n    Card\n} from \"@material-ui/core\";\n\nexport default function Timer(props) {\n    console.log(props)\n    \n    const Completionist = () => {\n        return (\n            <span className=\"sign\">\n            <Card style={{ backgroundColor: \"rgba(0,0,0,0)\", color: \"white\", padding: \"0\", margin: \"0 auto\" }}>\n                <CardHeader\n                    style={{ textAlign: \"center\" }}\n                    title=\" \">\n    \n                </CardHeader>\n                <CardContent>\n                    <Typography style={{ textAlign: \"center\", fontSize: \"17px\" }}>\n                       \n                        <h1>\n                            Game is live !\n                        </h1>\n                    </Typography>\n                </CardContent>\n            </Card>\n        </span>\n        )\n        \n    }\n    \n    const renderer = ({ days, hours, minutes, seconds, completed }) => {\n        if (completed) {\n            return <Completionist />;\n        } else {\n            return (\n                <span className=\"sign\">\n                    <Card style={{ backgroundColor: \"rgba(0,0,0,0)\", color: \"white\", padding: \"0\", margin: \"0 auto\" }}>\n                        <CardHeader\n                            style={{ textAlign: \"center\" }}\n                            title=\" \">\n\n                        </CardHeader>\n                        <CardContent>\n                            <Typography style={{ textAlign: \"center\", fontSize: \"17px\" }}>\n                                <h1>\n                                    {props.message}&nbsp;&nbsp;{zeroPad(days, 3)}:{zeroPad(hours)}:{zeroPad(minutes)}:{zeroPad(seconds)}\n                                </h1>\n                                <h1>\n                                    Game is not live yet !\n                                </h1>\n                            </Typography>\n                        </CardContent>\n                    </Card>\n                </span>)\n\n        }\n      \n\n\n\n    };\n\n  \n    \n\n\n\n    return (\n        \n        <Countdown\n        date={props.start}\n           \n            renderer={renderer}\n            onComplete={complete}\n        />\n    )\n\n}"],"mappings":";;;;;;;;;;;;;;;;;;AACA;AAEA;AACA;AAOA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AACA;AAFA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAKA;AACA;AAMA;AAGA;AAEA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;;;;A","sourceRoot":""}